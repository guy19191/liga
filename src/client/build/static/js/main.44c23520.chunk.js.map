{"version":3,"sources":["components/AuthForm.js","components/BottomMenu.js","components/WinningIcon.js","components/EventCard.js","store/request.js","components/UserHeader.js","store/apis.js","components/CreateLigaUser.js","components/EventListing.js","components/ManagerBetControl.js","routes/PrivateRoutes.js","routes/managerRoutes.js","routes/helpers.js","components/LeagueTable.js","components/UserProfile.js","components/RulesComponent.js","components/SignupForm.js","routes/Router.js","App.js","index.js"],"names":["AuthForm","_ref","loginCheck","username","setUsername","useState","password","setPassword","alert","setAlert","isLoading","setIsLoading","React","createElement","className","onSubmit","async","e","preventDefault","response","axios","post","status","localStorage","setItem","data","accessToken","refreshToken","error","console","type","placeholder","value","onChange","target","required","disabled","href","nevigate","to","window","location","BottomMenu","currentPath","pathname","onClick","WinningIcon","getStatusIcon","Check","size","X","Loader2","BettingCard","id","team1","team2","startTime","betType","onPlaceBet","points","teamSelected","win","howWins","selectedPoints","setSelectedPoints","Number","selectedTeam","setSelectedTeam","handlePointsChange","amount","newPoints","Math","max","handleTeamSelect","team","winAmount","winningStatus","isTeamSelected","teamNumber","dir","Fragment","Lock","Clock","role","tabIndex","style","backgroundImage","Trophy","Coins","handleSubmitBet","axiosInstance","create","headers","Content-Type","interceptors","request","use","getItem","Promise","reject","originalRequest","config","_retry","newRefreshToken","defaults","common","refreshError","removeItem","UserHeader","isPointsUpdating","setIsPointsUpdating","prevPoints","setPrevPoints","useEffect","timer","setTimeout","clearTimeout","User","Award","UserHeaderSkeleton","width","height","userLigaApi","get","UserDialog","isOpen","onClose","onSave","nickname","setNickname","league","setLeague","leagues","setLeagues","isLoadingLeagues","setIsLoadingLeagues","setError","document","body","overflow","fetchLeagues","err","map","key","name","EventListing","events","setEvents","setPoints","showRegistration","setShowRegistration","fetchData","betsResponse","userBetResponse","userResponse","all","betsData","userData","bet","forEach","user","betid","howwins","createUserEvents","handleRefresh","handleWatch","CreateLigaUser","Array","_","index","length","event","EventCard","teamA","teamB","dateTime","disable","betName","aria-label","Modal","children","stopPropagation","ManagerBetControl","bets","setBets","teams","setTeams","betNames","setBetNames","newBet","setNewBet","date","hour","isTeamModalOpen","setIsTeamModalOpen","isBetNameModalOpen","setIsBetNameModalOpen","newTeam","setNewTeam","image","newBetName","setNewBetName","lastAddedTeam","setLastAddedTeam","fetchInitialData","fetchTeams","fetchBets","Object","keys","handleInputChange","prev","[object Object]","validateBetForm","resetBetForm","handleManualWin","handleNewTeamChange","files","handleRemoveBet","URL","createObjectURL","htmlFor","accept","includes","Protected","Outlet","Navigate","ManagerRoutes","hasPermit","hasPermission","LoginChecker","isAuth","replace","checkLogin","LeagueTable","sortedPlayers","setSortedPlayers","leagueName","setLeagueName","players","sort","a","b","fetchLeague","player","UserProfile","setUserData","betHistory","setBetHistory","fetchUser","winRate","totalBets","game","result","startsWith","RulesComponent","expandedSection","setExpandedSection","rulesData","title","icon","rules","toggleSection","section","rule","SignupForm","formData","setFormData","email","confirmPassword","firstName","lastName","handleChange","prevState","loginResponse","_error$response","Router","BrowserRouter","Routes","Route","path","element","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"iaAqFeA,MAjFEC,IAAoB,IAAnBC,WAAEA,GAAYD,EAC5B,MAAOE,EAAUC,GAAeC,mBAAS,KAClCC,EAAUC,GAAeF,mBAAS,KAClCG,EAAOC,GAAYJ,mBAAS,KAC5BK,EAAWC,GAAgBN,oBAAS,GAE3CH,IAwBA,OACIU,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,OAAKC,UAAU,qBACXF,IAAAC,cAAA,MAAIC,UAAU,cAAa,8CAC3BF,IAAAC,cAAA,QAAME,SA1BGC,UACjBC,EAAEC,iBACFP,GAAa,GACbF,EAAS,IAET,IACI,MAAMU,QAAiBC,IAAMC,KAAK,iBAAkB,CAAElB,WAAUG,aACxC,MAApBa,EAASG,QACTC,aAAaC,QAAQ,cAAeL,EAASM,KAAKC,aAClDH,aAAaC,QAAQ,eAAgBL,EAASM,KAAKE,cACnDzB,KAEAO,EAASU,EAASM,MAExB,MAAOG,GACLnB,EAAS,kIACToB,QAAQD,MAAM,eAAgBA,GACjC,QACGjB,GAAa,KAQqBG,UAAU,aACpCF,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,SACIiB,KAAK,QACLC,YAAY,uCACZC,MAAO7B,EACP8B,SAAWhB,GAAMb,EAAYa,EAAEiB,OAAOF,OACtCG,UAAQ,EACRrB,UAAU,gBAGlBF,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,SACIiB,KAAK,WACLC,YAAY,iCACZC,MAAO1B,EACP2B,SAAWhB,GAAMV,EAAYU,EAAEiB,OAAOF,OACtCG,UAAQ,EACRrB,UAAU,gBAGlBF,IAAAC,cAAA,UACIiB,KAAK,SACLhB,yBAA0BJ,EAAY,UAAY,KAClD0B,SAAU1B,GAETA,EAAY,oCAAa,kCAG7BF,GACGI,IAAAC,cAAA,OAAKC,UAAU,cACVN,IAKbI,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,SAAG,iGACqB,IACpBD,IAAAC,cAAA,KAAGwB,KAAK,UAAUvB,UAAU,aAAY,4EC1EhE,MAAMwB,EAAYC,IACdC,OAAOC,SAASJ,KAAOE,GAyCZG,MAtCIA,KAEf,MAAMC,EAAcH,OAAOC,SAASG,SAEpC,OACIhC,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,UACIgC,QAASA,IAAMP,EAAS,KACxBxB,UAA2B,MAAhB6B,EAAsB,SAAW,IAE5C/B,IAAAC,cAAA,QAAMC,UAAU,aAAY,gBAAS,oDAGzCF,IAAAC,cAAA,UACIgC,QAASA,IAAMP,EAAS,UACxBxB,UAA2B,WAAhB6B,EAA2B,SAAW,IAEjD/B,IAAAC,cAAA,QAAMC,UAAU,aAAY,gBAAS,wCAGzCF,IAAAC,cAAA,UACIgC,QAASA,IAAMP,EAAS,WACxBxB,UAA2B,YAAhB6B,EAA4B,SAAW,IAElD/B,IAAAC,cAAA,QAAMC,UAAU,aAAY,gBAAS,kCAGzCF,IAAAC,cAAA,UACIgC,QAASA,IAAMP,EAAS,YACxBxB,UAA2B,aAAhB6B,EAA6B,SAAW,IAEnD/B,IAAAC,cAAA,QAAMC,UAAU,aAAY,gBAAS,sHCEtCgC,MApCK7C,IAAgC,IAA/BqB,OAAEA,EAAMR,UAAEA,EAAY,IAAIb,EA6B3C,OACIW,IAAAC,cAAA,OAAKC,4BAA6BA,KA7BhBiC,MAClB,OAAQzB,GACJ,IAAK,UACD,OACIV,IAAAC,cAAA,OAAKC,UAAU,8EACXF,IAAAC,cAACmC,IAAK,CAACC,KAAM,GAAInC,UAAU,aAC3BF,IAAAC,cAAA,QAAMC,UAAU,uBAAsB,6BAGlD,IAAK,SACD,OACIF,IAAAC,cAAA,OAAKC,UAAU,0EACXF,IAAAC,cAACqC,IAAC,CAACD,KAAM,GAAInC,UAAU,aACvBF,IAAAC,cAAA,QAAMC,UAAU,uBAAsB,mCAGlD,IAAK,UACD,OACIF,IAAAC,cAAA,OAAKC,UAAU,4EACXF,IAAAC,cAACsC,IAAO,CAACF,KAAM,GAAInC,UAAU,0BAC7BF,IAAAC,cAAA,QAAMC,UAAU,uBAAsB,yCAGlD,QACI,OAAO,OAMViC,KCmKEK,MAjMKnD,IAYO,IAZNoD,GACIA,EAAEC,MACFA,EAAKC,MACLA,EAAKC,UACLA,EAASC,QACTA,EAAOC,WACPA,EAAUtB,SACVA,EAAQuB,OACRA,EAAMC,aACNA,EAAYC,IACZA,EAAM,EAACC,QACPA,GACH7D,EAClB,MAAO8D,EAAgBC,GAAqB3D,mBAAS4D,OAAON,IAAW,MAChEO,EAAcC,GAAmB9D,mBAASuD,GAAgB,MAE3DQ,EAAsBC,IACxB,IAAKjC,EAAU,CACX,MAAMkC,EAAYC,KAAKC,IAAI,IAAKT,EAAiBM,GACjDL,EAAkBM,KAIpBG,EAAoBC,IACjBtC,GACD+B,EAAgBO,IAASR,EAAe,KAAOQ,IAuBjDC,EAREvC,GAAoB,IAARyB,EACLA,EAAMI,OAAON,GAEjB,EAMLiB,EAHkBd,GAAWF,EAAe,UAAuB,GAAXE,EAAe,UAAY,SAKnFe,EAAkBC,GACb1C,EAAWwB,IAAiBkB,EAAaZ,IAAiBY,EAGrE,OACIlE,IAAAC,cAAA,OAAKC,0BAA2BsB,EAAW,gBAAkB,KAAM2C,IAAI,OACnEnE,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,MAAIC,UAAU,YAAY2C,GACzBrB,GACGxB,IAAAC,cAAAD,IAAAoE,SAAA,KACIpE,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAACoE,IAAI,CAACnE,UAAU,YAAYmC,KAAM,KAClCrC,IAAAC,cAAA,YAAM,4DAET+D,GACGhE,IAAAC,cAACiC,EAAW,CAACxB,OAAQsD,MAKrChE,IAAAC,cAAA,OAAKC,UAAU,gBACXF,IAAAC,cAACqE,IAAK,CAACpE,UAAU,cACjBF,IAAAC,cAAA,YAAO2C,KAIf5C,IAAAC,cAAA,OAAKC,UAAU,gBACXF,IAAAC,cAAA,OAAKC,UAAU,iBACXF,IAAAC,cAAA,OACIC,yBAA0B+D,EAAe,GAAK,WAAa,MACvDzC,EAAW,WAAa,cAE5BS,QAASA,IAAM4B,EAAiB,GAChCU,KAAK,SACLC,SAAUhD,GAAY,EAAI,GAE1BxB,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,OACIC,UAAU,YACVuE,MAAO,CACHC,2DAA4DhC,EAAM,SAGzElB,GAA6B,IAAjBwB,GACThD,IAAAC,cAAA,OAAKC,UAAU,iBACXF,IAAAC,cAAC0E,IAAM,CAACzE,UAAU,cAAcmC,KAAM,KACtCrC,IAAAC,cAAA,QAAMC,UAAU,cAAa,IAAE6D,IAGtCvC,GAA6B,IAAjBwB,GACThD,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,QAAMC,UAAU,eAAc,IAAE6C,KAI5C/C,IAAAC,cAAA,QAAMC,UAAU,aAAawC,GAC5BuB,EAAe,IACZjE,IAAAC,cAAA,OAAKC,UAAU,sBACXF,IAAAC,cAAA,YAAM,8BAKlBD,IAAAC,cAAA,QAAMC,UAAU,MAAK,MAErBF,IAAAC,cAAA,OACIC,yBAA0B+D,EAAe,GAAK,WAAa,MACvDzC,EAAW,WAAa,cAE5BS,QAASA,IAAM4B,EAAiB,GAChCU,KAAK,SACLC,SAAUhD,GAAY,EAAI,GAE1BxB,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,OACIC,UAAU,YACVuE,MAAO,CACHC,2DAA4D/B,EAAM,SAGzEnB,GAA6B,IAAjBwB,GACThD,IAAAC,cAAA,OAAKC,UAAU,iBACXF,IAAAC,cAAC0E,IAAM,CAACzE,UAAU,cAAcmC,KAAM,KACtCrC,IAAAC,cAAA,QAAMC,UAAU,cAAa,IAAE6D,IAGtCvC,GAA6B,IAAjBwB,GACThD,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,QAAMC,UAAU,eAAc,IAAE6C,KAI5C/C,IAAAC,cAAA,QAAMC,UAAU,aAAayC,GAC5BsB,EAAe,IACZjE,IAAAC,cAAA,OAAKC,UAAU,sBACXF,IAAAC,cAAA,YAAM,gCAMpBuB,GACExB,IAAAC,cAAAD,IAAAoE,SAAA,KACIpE,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,OAAKC,UAAU,gBACXF,IAAAC,cAAC2E,IAAK,CAAC1E,UAAU,gBACjBF,IAAAC,cAAA,YAAM,8EAEVD,IAAAC,cAAA,OAAKC,UAAU,mBACXF,IAAAC,cAAA,UACIC,UAAU,aACV+B,QAASA,IAAMuB,GAAoB,MACtC,QAGDxD,IAAAC,cAAA,QAAMC,UAAU,kBAAkBiD,GAClCnD,IAAAC,cAAA,UACIC,UAAU,aACV+B,QAASA,IAAMuB,EAAmB,MACrC,UAMTxD,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,UACIC,wBAAyBoD,EAAe,SAAW,aACnDrB,QAvJJ4C,KAChBvB,IAAiB9B,GACjBsB,EAAW,CACPL,KACAqB,KAAMR,EACNP,OAAQI,KAmJQ3B,UAAW8B,GACd,0DCzL7B,MAAMwB,EAAgBtE,IAAMuE,OAAO,CAC/BC,QAAS,CACLC,eAAgB,sBAGpBH,EAAcI,aAAaC,QAAQC,IAAID,IACnC,MAAMrE,EAAcH,aAAa0E,QAAQ,eAIzC,OAHIvE,IACAqE,EAAQH,QAAuB,wBAAclE,KAE1CqE,GACRnE,GACQsE,QAAQC,OAAOvE,IAG1B8D,EAAcI,aAAa3E,SAAS6E,IAChC7E,GAAYA,EACZH,UACI,MAAMoF,EAAkBxE,EAAMyE,OAC9B,GAA8B,MAA1BzE,EAAMT,SAASG,SAAmB8E,EAAgBE,OAAQ,CAC1DF,EAAgBE,QAAS,EACzB,IACI,MAAM3E,EAAeJ,aAAa0E,QAAQ,gBAEpC9E,QAAiBC,IAAMC,KAAK,wBAAyB,CACvDM,kBAEED,YAACA,EAAaC,aAAc4E,GAAmBpF,EAASM,KAM9D,OAJAF,aAAaC,QAAQ,cAAeE,GACpCH,aAAaC,QAAQ,eAAgB+E,GAErCb,EAAcc,SAASZ,QAAQa,OAAsB,wBAAc/E,IAC5DgE,EAAcU,GACvB,MAAOM,GAML,OAJA7E,QAAQD,MAAM,wBAAyB8E,GACvCnF,aAAaoF,WAAW,eACxBpF,aAAaoF,WAAW,gBACxBnE,OAAOC,SAASJ,KAAO,SAChB6D,QAAQC,OAAOO,IAG9B,OAAOR,QAAQC,OAAOvE,+BCzClC,MAAMgF,EAAa3G,IAA0B,IAAzBE,SAAEA,EAAQwD,OAAEA,GAAQ1D,EACpC,MAAO4G,EAAkBC,GAAuBzG,oBAAS,IAClD0G,EAAYC,GAAiB3G,mBAASsD,GAe7C,OAbAsD,oBAAU,KACN,GAAIF,IAAepD,EAAQ,CACvBmD,GAAoB,GACpBE,EAAcrD,GAEd,MAAMuD,EAAQC,WAAW,KACrBL,GAAoB,IACrB,KAEH,MAAO,IAAMM,aAAaF,KAE/B,CAACvD,EAAQoD,IAGRnG,IAAAC,cAAA,UAAQC,UAAU,eACdF,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,OAAKC,UAAU,aACXF,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAACwG,IAAI,CAACvG,UAAU,eAEpBF,IAAAC,cAAA,OAAKC,UAAU,aACXF,IAAAC,cAAA,OAAKC,UAAU,YACXF,IAAAC,cAAA,MAAIC,UAAU,YAAYX,GAC1BS,IAAAC,cAAA,OAAKC,UAAU,gBACXF,IAAAC,cAACyG,IAAK,CAACxG,UAAU,eACjBF,IAAAC,cAAA,QAAMC,0BAA2B+F,EAAmB,WAAa,MAC5DlD,WAYnC4D,EAAqBA,IACvB3G,IAAAC,cAAA,UAAQC,UAAU,eACdF,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,OAAKC,UAAU,aACXF,IAAAC,cAAA,OAAKC,UAAU,8BACfF,IAAAC,cAAA,OAAKC,UAAU,aACXF,IAAAC,cAAA,OAAKC,UAAU,YACXF,IAAAC,cAAA,OAAKC,UAAU,oBAAoBuE,MAAO,CAACmC,MAAO,QAASC,OAAQ,UACnE7G,IAAAC,cAAA,OAAKC,UAAU,wBAAwBuE,MAAO,CAACmC,MAAO,OAAQC,OAAQ,gBCtDlGzG,eAAe0G,IAEX,aADkBhC,EAAciC,IAAI,wBACzBlG,iBCuIAmG,MAvII3H,IAAiC,IAAhC4H,OAAEA,EAAMC,QAAEA,EAAOC,OAAEA,GAAQ9H,EAC3C,MAAO+H,EAAUC,GAAe5H,mBAAS,KAClC6H,EAAQC,GAAa9H,mBAAS,KAC9B+H,EAASC,GAAchI,mBAAS,KAChCK,EAAWC,GAAgBN,oBAAS,IACpCiI,EAAkBC,GAAuBlI,oBAAS,IAClDuB,EAAO4G,GAAYnI,mBAAS,MAEnC4G,oBAAU,KACFY,GACAY,SAASC,KAAKrD,MAAMsD,SAAW,SAC/BC,KAEAH,SAASC,KAAKrD,MAAMsD,SAAW,QAG5B,KACHF,SAASC,KAAKrD,MAAMsD,SAAW,UAEpC,CAACd,IAEJ,MAAMe,EAAe5H,UACjBuH,GAAoB,GACpBC,EAAS,MACT,IACI,MAAMrH,QAAiBuE,EAAciC,IAAI,6BACzCU,EAAWlH,EAASM,MACtB,MAAOoH,GACLL,EAAS,4GACT3G,QAAQD,MAAM,0BAA2BiH,GAC5C,QACGN,GAAoB,KAsB5B,OAAKV,EAGDjH,IAAAC,cAAA,OAAKC,4BAA6B+G,EAAS,OAAS,MAChDjH,IAAAC,cAAA,OAAKC,UAAU,oBAEXF,IAAAC,cAAA,OAAKC,UAAU,iBACXF,IAAAC,cAAA,MAAIC,UAAU,gBAAe,kEAIjCF,IAAAC,cAAA,WAEID,IAAAC,cAAA,OAAKC,UAAU,cACXF,IAAAC,cAAA,SAAOC,UAAU,cAAa,kCAC9BF,IAAAC,cAAA,SACIiB,KAAK,OACLhB,UAAU,aACViB,YAAY,0DACZC,MAAOgG,EACP/F,SAAWhB,GAAMgH,EAAYhH,EAAEiB,OAAOF,UAK9CpB,IAAAC,cAAA,OAAKC,UAAU,cACXF,IAAAC,cAAA,SAAOC,UAAU,cAAa,4BAC7BwH,EACG1H,IAAAC,cAAA,OAAKC,UAAU,0BACfc,EACAhB,IAAAC,cAAA,OAAKC,UAAU,iBACVc,EACDhB,IAAAC,cAAA,UACIC,UAAU,eACV+B,QAAS+F,GACZ,0CAKLhI,IAAAC,cAAA,UACIC,UAAU,cACVkB,MAAOkG,EACPjG,SAAWhB,GAAMkH,EAAUlH,EAAEiB,OAAOF,OACpCI,SAAUkG,GAEV1H,IAAAC,cAAA,UAAQmB,MAAM,IAAG,+CAChBoG,EAAQU,IAAKZ,GACVtH,IAAAC,cAAA,UACIkI,IAAKb,EAAO7E,GACZrB,MAAOkG,EAAO7E,IAEb6E,EAAOc,UAShCpI,IAAAC,cAAA,OAAKC,UAAU,iBACXF,IAAAC,cAAA,UACIC,UAAU,kBACV+B,QAlFD7B,UACf,GAAKgH,GAAaE,EAAlB,CAKAvH,GAAa,GACb,UACUoH,EAAO,CAAEC,WAAUE,WACzBJ,IACF,MAAOlG,GACLpB,MAAM,2IACNqB,QAAQD,MAAM,0BAA2BA,GAC5C,QACGjB,GAAa,SAZbH,MAAM,mGAiFM4B,SAAU1B,IAAcsH,IAAaE,GAEpCxH,EACGE,IAAAC,cAAAD,IAAAoE,SAAA,KACIpE,IAAAC,cAAA,QAAMC,UAAU,oBAAyB,+BAI7C,+BAzEJ,MC8FTmI,MA9IMA,KACjB,MAAOC,EAAQC,GAAa9I,mBAAS,KAC9BF,EAAUC,GAAeC,mBAAS,KAClCsD,EAAQyF,GAAa/I,mBAAS,IAC9BK,EAAWC,GAAgBN,oBAAS,IACpCuB,EAAO4G,GAAYnI,mBAAS,OAC5BgJ,EAAkBC,GAAuBjJ,oBAAS,GAEzD4G,oBAAU,KACNsC,KACD,IAEH,MAAMA,EAAYvI,UACd,IACIL,GAAa,GACb6H,EAAS,MAGT,MAAOgB,EAAcC,EAAiBC,SAAsBxD,QAAQyD,IAAI,CACpEjE,EAAciC,IAAI,mBAClBjC,EAAciC,IAAI,uBAClBD,MAGJ,IAAKgC,EAAa1B,SAEd,YADAsB,GAAoB,IAmChC,SAA0BM,EAAUC,GAChC,IAAK,MAAMC,KAAOF,EACdC,EAASE,QAAQC,IACTA,EAAKC,QAAUL,EAASE,GAAKzG,KAC7BuG,EAASE,GAAKnG,OAASqG,EAAKrG,OAC5BiG,EAASE,GAAKpF,KAAQsF,EAAKE,QAC3BN,EAASE,GAAKjG,IAAMmG,EAAKnG,OAIrCsF,EAAUS,GAzCNO,CAAiBX,EAAa/H,KAAMgI,EAAgBhI,MACpDrB,EAAYsJ,EAAa1B,UACzBoB,EAAUM,EAAa/F,QACzB,MAAOkF,GACLL,EAAS,iJACT3G,QAAQD,MAAM,uBAAwBiH,GACzC,QACGlI,GAAa,KAefyJ,EAAgBA,KAClBb,KAGEc,EAAcrJ,gBACV0E,EAAcrE,KAAK,kBAAmBI,SACtC8H,KAgBV,OAEI3I,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAACyJ,EAAc,CACXzC,OAAQwB,EACRvB,QAASA,IAAMwB,GAAoB,GACnCvB,OAvCe/G,UACvB,UAEU0E,EAAcrE,KAAK,yBAA0BwI,SAC7CN,IACR,MAAO3H,GACLC,QAAQD,MAAM,0BAA2BA,GACzC4G,EAAS,+IAkCT5H,IAAAC,cAAA,OAAKC,UAAU,YACTX,EAAaS,IAAAC,cAAC+F,EAAU,CAACzG,SAAUA,EAAUwD,OAAQA,IAAa/C,IAAAC,cAAC0G,EAAkB,OAG3F3G,IAAAC,cAAA,OAAKC,UAAU,aAEVJ,EAEG,IAAI6J,MAAM,IAAIzB,IAAI,CAAC0B,EAAGC,IAClB7J,IAAAC,cAAA,OAAKkI,IAAK0B,EAAO3J,UAAU,sBAE/Bc,EAEAhB,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,SAAIe,GACJhB,IAAAC,cAAA,UAAQgC,QAASuH,GAAe,0CAElB,IAAlBlB,EAAOwB,OAEP9J,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,OAAKC,UAAU,oBAAmB,gBAClCF,IAAAC,cAAA,KAAGC,UAAU,oBAAmB,+HAChCF,IAAAC,cAAA,KAAGC,UAAU,uBAAsB,wGAIvCF,IAAAC,cAAA,OAAKC,UAAU,eACVoI,EAAOJ,IAAK6B,GACT/J,IAAAC,cAAC+J,EAAS,CACN7B,IAAK4B,EAAMtH,GACXA,GAAIsH,EAAMtH,GACVC,MAAOqH,EAAME,MACbtH,MAAOoH,EAAMG,MACbtH,UAAWmH,EAAMI,SACjB3I,SAAUuI,EAAMK,QAChBnH,IAAKI,OAAO0G,EAAM9G,KAClBJ,QAASkH,EAAMM,QACftH,OAAQgH,EAAMhH,OACdC,aAAc+G,EAAMjG,KACpBhB,WAAY2G,EACZvG,QAAS6G,EAAM7G,aAQnClD,IAAAC,cAAA,UACIC,UAAU,iBACV+B,QAASuH,EACTc,aAAW,2DACd,gBAIDtK,IAAAC,cAAC6B,EAAU,oBC9IvB,MAAMyI,EAAQlL,IAAmC,IAAlC4H,OAAEA,EAAMC,QAAEA,EAAOsD,SAAEA,GAAUnL,EACxC,OAAK4H,EAGDjH,IAAAC,cAAA,OAAKC,UAAU,gBAAgB+B,QAASiF,GACpClH,IAAAC,cAAA,OAAKC,UAAU,gBAAgB+B,QAAS5B,GAAKA,EAAEoK,mBAC3CzK,IAAAC,cAAA,OAAKC,UAAU,gBACXF,IAAAC,cAAA,MAAIC,UAAU,eAAc,WAC5BF,IAAAC,cAAA,UAAQC,UAAU,cAAc+B,QAASiF,GAAS,SAEtDlH,IAAAC,cAAA,OAAKC,UAAU,cACVsK,KAVG,MA0YTE,MAzXWA,KAEtB,MAAOC,EAAMC,GAAWnL,mBAAS,KAC1BoL,EAAOC,GAAYrL,mBAAS,KAC5BsL,EAAUC,GAAevL,mBAAS,CAAC,SAAU,aAAc,gBAC3DwL,EAAQC,GAAazL,mBAAS,CACjCwK,MAAO,GACPC,MAAO,GACPG,QAAS,GACTc,KAAM,GACNC,KAAM,MAEHC,EAAiBC,GAAsB7L,oBAAS,IAChD8L,EAAoBC,GAAyB/L,oBAAS,IACtDgM,EAASC,GAAcjM,mBAAS,CAAE2I,KAAM,GAAIuD,MAAO,QACnDC,EAAYC,GAAiBpM,mBAAS,KACtCqM,EAAeC,GAAoBtM,mBAAS,KAC5CK,EAAWC,GAAgBN,oBAAS,IACpCuB,EAAO4G,GAAYnI,mBAAS,MAGnC4G,oBAAU,KACN2F,KACD,IAEH,MAAMA,EAAmB5L,UACrBL,GAAa,GACb,UACUuF,QAAQyD,IAAI,CAACkD,IAAcC,MACnC,MAAOlL,GACL4G,EAAS,+BACT3G,QAAQD,MAAM,8BAA+BA,GAChD,QACGjB,GAAa,KAKfkM,EAAa7L,UACf,IACI,MAAMyK,QAAc/F,EAAciC,IAAI,sBACtC+D,EAA4C,IAAnCqB,OAAOC,KAAKvB,EAAMhK,MAAMiJ,OAAe,GAAKe,EAAMhK,MAC7D,MAAOG,GAEL,MADAC,QAAQD,MAAM,wBAAyBA,GACjCA,IAIRkL,EAAY9L,UACd,IACI,MAAMG,QAAiBuE,EAAciC,IAAI,oBACzC6D,EAA8C,IAAtCuB,OAAOC,KAAK7L,EAASM,MAAMiJ,OAAe,GAAKvJ,EAASM,MAClE,MAAOG,GAEL,MADAC,QAAQD,MAAM,uBAAwBA,GAChCA,IAKRqL,EAAqBhM,IACvB,MAAM+H,KAAEA,EAAIhH,MAAEA,GAAUf,EAAEiB,OAC1B4J,EAAUoB,IAAI,IAAUA,EAAMC,CAACnE,GAAOhH,MAyBpCoL,EAAkBA,IACbvB,EAAOhB,OAASgB,EAAOf,OAASe,EAAOZ,SAAWY,EAAOE,MAAQF,EAAOG,KAG7EqB,EAAeA,KACjBvB,EAAU,CACNjB,MAAO,GACPC,MAAO,GACPG,QAAS,GACTc,KAAM,GACNC,KAAM,MAeRsB,EAAkBtM,MAAOqC,EAAIS,KAC/B,UACU4B,EAAcrE,KAAK,iCAAkC,CAACgC,GAAIA,EAAIS,QAASA,UACvEgJ,IACR,MAAOlL,GACL4G,EAAS,2BACT3G,QAAQD,MAAM,yBAA0BA,KAK1C2L,EAAuBtM,IACzB,MAAM+H,KAAEA,EAAIhH,MAAEA,EAAKwL,MAAEA,GAAUvM,EAAEiB,OAE7BoK,EADS,UAATtD,EACWkE,IAAI,IAAUA,EAAMX,MAAOiB,EAAM,KAEjCN,IAAI,IAAUA,EAAMC,CAACnE,GAAOhH,MA4C/C,OAAItB,EACOE,IAAAC,cAAA,OAAKC,UAAU,mBAAkB,cAIxCF,IAAAC,cAAA,OAAKC,UAAU,qBACXF,IAAAC,cAAA,MAAIC,UAAU,iBAAgB,uBAE7Bc,GAAShB,IAAAC,cAAA,OAAKC,UAAU,iBAAiBc,GAE1ChB,IAAAC,cAAA,OAAKC,UAAU,aAEXF,IAAAC,cAAA,OAAKC,UAAU,iBACXF,IAAAC,cAAA,UACIC,UAAU,cACVkI,KAAK,QACLhH,MAAO6J,EAAOhB,MACd5I,SAAUgL,GAEVrM,IAAAC,cAAA,UAAQmB,MAAM,IAAG,iBAChByJ,EAAM3C,IAAIpE,GACP9D,IAAAC,cAAA,UAAQkI,IAAKrE,EAAKrB,GAAIrB,MAAO0C,EAAKsE,MAAOtE,EAAKsE,QAGtDpI,IAAAC,cAAA,UACIC,UAAU,aACV+B,QAASA,KACLqJ,GAAmB,GACnBS,EAAiB,WAExB,MAML/L,IAAAC,cAAA,OAAKC,UAAU,iBACXF,IAAAC,cAAA,UACIC,UAAU,cACVkI,KAAK,QACLhH,MAAO6J,EAAOf,MACd7I,SAAUgL,GAEVrM,IAAAC,cAAA,UAAQmB,MAAM,IAAG,iBAChByJ,EAAM3C,IAAIpE,GACP9D,IAAAC,cAAA,UAAQkI,IAAKrE,EAAKrB,GAAIrB,MAAO0C,EAAKsE,MAAOtE,EAAKsE,QAGtDpI,IAAAC,cAAA,UACIC,UAAU,aACV+B,QAASA,KACLqJ,GAAmB,GACnBS,EAAiB,WAExB,MAML/L,IAAAC,cAAA,OAAKC,UAAU,iBACXF,IAAAC,cAAA,UACIC,UAAU,cACVkI,KAAK,UACLhH,MAAO6J,EAAOZ,QACdhJ,SAAUgL,GAEVrM,IAAAC,cAAA,UAAQmB,MAAM,IAAG,mBAChB2J,EAAS7C,IAAIE,GACVpI,IAAAC,cAAA,UAAQkI,IAAKC,EAAMhH,MAAOgH,GAAOA,KAGzCpI,IAAAC,cAAA,UACIC,UAAU,aACV+B,QAASA,IAAMuJ,GAAsB,IACxC,MAMLxL,IAAAC,cAAA,SACIC,UAAU,aACVgB,KAAK,OACLkH,KAAK,OACLhH,MAAO6J,EAAOE,KACd9J,SAAUgL,IAEdrM,IAAAC,cAAA,SACIC,UAAU,aACVgB,KAAK,OACLkH,KAAK,OACLhH,MAAO6J,EAAOG,KACd/J,SAAUgL,KAIlBrM,IAAAC,cAAA,UAAQC,UAAU,gBAAgB+B,QA5MrB7B,UACjB,GAAKoM,IAAL,CAKAzM,GAAa,GACb,IACI,MAAMoK,KAAcc,EAAOE,QAAQF,EAAOG,OACpClC,EAAM,IAAK+B,EAAQd,kBACnBrF,EAAcrE,KAAK,wBAAyByI,SAC5CgD,IACNO,IACA7E,EAAS,MACX,MAAO5G,GACL4G,EAAS,qBACT3G,QAAQD,MAAM,oBAAqBA,GACtC,QACGjB,GAAa,SAhBb6H,EAAS,+BA0MgD,WAKzD5H,IAAAC,cAAA,OAAKC,UAAU,mBACXF,IAAAC,cAAA,SAAOC,UAAU,cACbF,IAAAC,cAAA,SAAOC,UAAU,gBACjBF,IAAAC,cAAA,UACID,IAAAC,cAAA,UAAI,MACJD,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,UAAI,aAGRD,IAAAC,cAAA,aACC0K,EAAKzC,IAAIgB,GACNlJ,IAAAC,cAAA,MAAIkI,IAAKe,EAAIzG,GAAIvC,UAAU,aACvBF,IAAAC,cAAA,MAAIC,UAAU,cAAcgJ,EAAIzG,IAChCzC,IAAAC,cAAA,MAAIC,UAAU,cAAcgJ,EAAIe,OAChCjK,IAAAC,cAAA,MAAIC,UAAU,cAAcgJ,EAAIgB,OAChClK,IAAAC,cAAA,MAAIC,UAAU,cAAcgJ,EAAImB,SAChCrK,IAAAC,cAAA,MAAIC,UAAU,cAAcgJ,EAAIhG,SAChClD,IAAAC,cAAA,MAAIC,UAAU,cAAcgJ,EAAIiB,UAChCnK,IAAAC,cAAA,MAAIC,UAAU,cACVF,IAAAC,cAAA,UACIC,UAAU,2BACV+B,QAASA,IAAMyK,EAAgBxD,EAAIzG,GAAI,IAC1C,cAGDzC,IAAAC,cAAA,UACIC,UAAU,2BACV+B,QAASA,IAAMyK,EAAgBxD,EAAIzG,GAAI,IAC1C,cAGDzC,IAAAC,cAAA,UACIC,UAAU,8BACV+B,QAASA,IAjNjB7B,WACpB,UACU0E,EAAcrE,KAAK,iCAAkC,CAACgC,GAAIA,UAC1DyJ,IACR,MAAOlL,GACL4G,EAAS,wBACT3G,QAAQD,MAAM,sBAAuBA,KA2ME6L,CAAgB3D,EAAIzG,KACtC,gBAWrBzC,IAAAC,cAACsK,EAAK,CAACtD,OAAQoE,EAAiBnE,QAASA,IAAMoE,GAAmB,IAC9DtL,IAAAC,cAAA,QAAME,SAhMIC,UAElB,GADAC,EAAEC,iBACGmL,EAAQrD,MAASqD,EAAQE,MAK9B,IACI,MAAM9K,EAAO,CAAEuH,KAAMqD,EAAQrD,KAAMuD,MAAOmB,IAAIC,gBAAgBtB,EAAQE,cAChE7G,EAAcrE,KAAK,mBAAoBI,SACvCoL,IACNX,GAAmB,GACnBJ,EAAUoB,IAAI,IAAUA,EAAMC,CAACT,GAAgBjL,EAAKuH,QACpDsD,EAAW,CAAEtD,KAAM,GAAIuD,MAAO,OAC9B/D,EAAS,MACX,MAAO5G,GACL4G,EAAS,sBACT3G,QAAQD,MAAM,qBAAsBA,QAdpC4G,EAAS,4CA6L0B1H,UAAU,cACrCF,IAAAC,cAAA,WACID,IAAAC,cAAA,SAAO+M,QAAQ,YAAW,aAC1BhN,IAAAC,cAAA,SACIiB,KAAK,OACLuB,GAAG,WACH2F,KAAK,OACLhH,MAAOqK,EAAQrD,KACf/G,SAAUsL,EACVzM,UAAU,cACVqB,UAAQ,KAGhBvB,IAAAC,cAAA,WACID,IAAAC,cAAA,SAAO+M,QAAQ,aAAY,cAC3BhN,IAAAC,cAAA,SACIiB,KAAK,OACLuB,GAAG,YACH2F,KAAK,QACL/G,SAAUsL,EACVzM,UAAU,aACV+M,OAAO,UACP1L,UAAQ,KAGhBvB,IAAAC,cAAA,UAAQiB,KAAK,SAAShB,UAAU,iBAAgB,cAOxDF,IAAAC,cAACsK,EAAK,CAACtD,OAAQsE,EAAoBrE,QAASA,IAAMsE,GAAsB,IACpExL,IAAAC,cAAA,QAAME,SA3MQE,IACtBA,EAAEC,iBACGsL,EAKAb,EAASmC,SAAStB,GAOnBhE,EAAS,iCANToD,EAAYsB,GAAQ,IAAIA,EAAMV,IAC9BJ,GAAsB,GACtBN,EAAUoB,IAAI,IAAUA,EAAMjC,QAASuB,KACvCC,EAAc,IACdjE,EAAS,OATTA,EAAS,8BAwM6B1H,UAAU,cACxCF,IAAAC,cAAA,WACID,IAAAC,cAAA,SAAO+M,QAAQ,WAAU,gBACzBhN,IAAAC,cAAA,SACIiB,KAAK,OACLuB,GAAG,UACHrB,MAAOwK,EACPvK,SAAWhB,GAAMwL,EAAcxL,EAAEiB,OAAOF,OACxClB,UAAU,cACVqB,UAAQ,KAGhBvB,IAAAC,cAAA,UAAQiB,KAAK,SAAShB,UAAU,iBAAgB,kCC9XrDiN,MALGA,KAEd,OADcxM,aAAa0E,QAAQ,eACpBrF,IAAAC,cAACmN,IAAM,MAAMpN,IAAAC,cAACoN,IAAQ,CAAC1L,GAAG,YCe9B2L,MANOA,KAGlB,MAbkBlN,WAClB,IAAImN,EACH,IAEOA,SADsBzI,EAAciC,IAAI,wCACpBlG,KAClB,MAAOR,GACTkN,GAAY,EAEpB,OAAOA,GAIUC,GACAxN,IAAAC,cAACmN,IAAM,MAAMpN,IAAAC,cAACoN,IAAQ,CAAC1L,GAAG,OCb/C,MAAM8L,EAAepO,IAAkB,IAAjBmL,SAAEA,GAAUnL,EAC9B,OAAIqO,IACO1N,IAAAC,cAACoN,IAAQ,CAAC1L,GAAG,IAAIgM,SAAO,IAE5BnD,GAGLkD,EAASA,IAAM/M,aAAa0E,QAAQ,eAEpCuI,EAAaA,KACXF,MACA9L,OAAOC,SAASJ,KAAO,YCmChBoM,MA7CKA,KAChB,MAAOC,EAAeC,GAAoBtO,mBAAS,KAC5CuO,EAAYC,GAAiBxO,mBAAS,IAY7C,OAVA4G,oBAAU,MAIVjG,iBACI,MAAMkH,QAAexC,EAAciC,IAAI,4BACvCkH,EAAc3G,EAAOzG,KAAKuH,MAC1B2F,EAAiB,IAAIzG,EAAOzG,KAAKqN,SAASC,KAAK,CAACC,EAAGC,IAAMA,EAAEtL,OAASqL,EAAErL,SANtEuL,IACD,IASCtO,IAAAC,cAAA,OAAKC,UAAU,0BACXF,IAAAC,cAAA,OAAKC,UAAU,iBACXF,IAAAC,cAAA,MAAIC,UAAU,gBAAgB8N,IAGlChO,IAAAC,cAAA,OAAKC,UAAU,mBACXF,IAAAC,cAAA,SAAOC,UAAU,kBACbF,IAAAC,cAAA,aACAD,IAAAC,cAAA,UACID,IAAAC,cAAA,UAAI,kCACJD,IAAAC,cAAA,UAAI,kCACJD,IAAAC,cAAA,UAAI,0CAGRD,IAAAC,cAAA,aACC6N,EAAc5F,IAAI,CAACqG,EAAQ1E,IACxB7J,IAAAC,cAAA,MAAIkI,IAAKoG,EAAOnH,UACZpH,IAAAC,cAAA,MAAIC,UAAU,iBAAgB,IAAE2J,EAAQ,GACxC7J,IAAAC,cAAA,MAAIC,UAAU,iBAAiBqO,EAAOnH,UACtCpH,IAAAC,cAAA,MAAIC,UAAU,eAAeqO,EAAOxL,aAMpD/C,IAAAC,cAAC6B,EAAU,cC+CR0M,MAtFKA,KAChB,MAAOvF,EAAUwF,GAAehP,mBAAS,KAClCiP,EAAYC,GAAiBlP,mBAAS,IAa7C,OAZA4G,oBAAU,MAIVjG,iBACI,MAAO0I,SAAsBxD,QAAQyD,IAAI,CACrCjC,MAEJ2H,EAAY3F,GAPZ8F,IACD,IAWC5O,IAAAC,cAAA,OAAKC,UAAU,qBACXF,IAAAC,cAAA,OAAKC,UAAU,gBACXF,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,OAAKC,UAAU,qBACXF,IAAAC,cAAA,WACID,IAAAC,cAAA,OAAKC,UAAU,wBACPF,IAAAC,cAAAD,IAAAoE,SAAA,KACIpE,IAAAC,cAAA,MAAIC,UAAU,oBAAoB+I,EAAS7B,YAGvDpH,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,YAAM,yCAASgJ,EAASlG,UAGhC/C,IAAAC,cAAA,OAAKC,UAAU,iBACXF,IAAAC,cAAA,OAAKC,UAAU,aAAY,4DAAa+I,EAAS4F,QAAQ,KACzD7O,IAAAC,cAAA,OAAKC,UAAU,aAAY,+CAAU+I,EAAS6F,cAmB1D9O,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,MAAIC,UAAU,iBAAgB,qGAC9BF,IAAAC,cAAA,SAAOC,UAAU,iBACbF,IAAAC,cAAA,aACAD,IAAAC,cAAA,UACID,IAAAC,cAAA,UAAI,kCACJD,IAAAC,cAAA,UAAI,4BACJD,IAAAC,cAAA,UAAI,kCACJD,IAAAC,cAAA,UAAI,kCACJD,IAAAC,cAAA,UAAI,0CAGRD,IAAAC,cAAA,aACCyO,GAAcA,EAAWxG,IAAI,CAACgB,EAAKW,IAChC7J,IAAAC,cAAA,MAAIkI,IAAK0B,GACL7J,IAAAC,cAAA,UAAKiJ,EAAIiC,MACTnL,IAAAC,cAAA,UAAKiJ,EAAI6F,MACT/O,IAAAC,cAAA,UAAKiJ,EAAIA,KACTlJ,IAAAC,cAAA,MAAIC,UAA0B,mCAAfgJ,EAAI8F,OAAqB,aAAe,eAClD9F,EAAI8F,QAEThP,IAAAC,cAAA,MAAIC,UAAWgJ,EAAInG,OAAOkM,WAAW,KAAO,kBAAoB,mBAC3D/F,EAAInG,cAQ7B/C,IAAAC,cAAC6B,EAAU,cC2BRoN,MA9GQA,KACnB,MAAOC,EAAiBC,GAAsB3P,mBAAS,MAEjD4P,EAAY,CACd,CACI5M,GAAI,EACJ6M,MAAO,sEACPC,KAAM,eACNC,MAAO,CACH,4DACA,4DACA,8DAGR,CACI/M,GAAI,EACJ6M,MAAO,sEACPC,KAAM,eACNC,MAAO,CACH,sDACA,sDACA,wDAGR,CACI/M,GAAI,EACJ6M,MAAO,wFACPC,KAAM,eACNC,MAAO,CACH,mCACA,mCACA,qCAGR,CACI/M,GAAI,EACJ6M,MAAO,4EACPC,KAAM,eACNC,MAAO,CACH,sDACA,sDACA,yDAKNC,EAAiBhN,IACnB2M,EAAmBD,IAAoB1M,EAAK,KAAOA,IAGvD,OACIzC,IAAAC,cAAA,OAAKC,UAAU,mBAEXF,IAAAC,cAAA,OAAKC,UAAU,gBACXF,IAAAC,cAAA,UAAI,2DACJD,IAAAC,cAAA,SAAG,uKAIPD,IAAAC,cAAA,OAAKC,UAAU,iBACVmP,EAAUnH,IAAKwH,GACZ1P,IAAAC,cAAA,OAAKkI,IAAKuH,EAAQjN,GAAIvC,UAAU,iBAC5BF,IAAAC,cAAA,UACIC,UAAU,iBACV+B,QAASA,IAAMwN,EAAcC,EAAQjN,KAErCzC,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,QAAMC,UAAU,gBAAgBwP,EAAQH,MACxCvP,IAAAC,cAAA,MAAIC,UAAU,iBAAiBwP,EAAQJ,QAE3CtP,IAAAC,cAAA,QAAMC,wBAAyBiP,IAAoBO,EAAQjN,GAAK,WAAa,MAAM,WAKvFzC,IAAAC,cAAA,OAAKC,6BAA8BiP,IAAoBO,EAAQjN,GAAK,WAAa,MAC7EzC,IAAAC,cAAA,OAAKC,UAAU,yBACXF,IAAAC,cAAA,MAAIC,UAAU,cACTwP,EAAQF,MAAMtH,IAAI,CAACyH,EAAM9F,IACtB7J,IAAAC,cAAA,MAAIkI,IAAK0B,GAAQ8F,UAU7C3P,IAAAC,cAAA,OAAKC,UAAU,aACXF,IAAAC,cAAA,UAAI,2DACJD,IAAAC,cAAA,OAAKC,UAAU,qBACVmP,EAAUnH,IAAKwH,GACZ1P,IAAAC,cAAA,UACIkI,IAAKuH,EAAQjN,GACbR,QAASA,IAAMwN,EAAcC,EAAQjN,IACrCvC,8BACIiP,IAAoBO,EAAQjN,GAAK,SAAW,MAG/CiN,EAAQH,KAAK,IAAEG,EAAQJ,UAKxCtP,IAAAC,cAAC6B,EAAU,QCwDR8N,MAjKIvQ,IAAoB,IAAnBC,WAAEA,GAAYD,EAC9B,MAAOwQ,EAAUC,GAAerQ,mBAAS,CACrCsQ,MAAO,GACPrQ,SAAU,GACVsQ,gBAAiB,GACjBC,UAAW,GACXC,SAAU,MAEPtQ,EAAOC,GAAYJ,mBAAS,KAC5BK,EAAWC,GAAgBN,oBAAS,GAErC0Q,EAAgB9P,IAClB,MAAM+H,KAAEA,EAAIhH,MAAEA,GAAUf,EAAEiB,OAC1BwO,EAAYM,IAAS,IACdA,EACH7D,CAACnE,GAAOhH,MA4DhB,OACIpB,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,OAAKC,UAAU,qBACXF,IAAAC,cAAA,MAAIC,UAAU,cAAa,kCAC3BF,IAAAC,cAAA,QAAME,SA5CGC,UAEjB,GADAC,EAAEC,iBAhBGuP,EAASE,OAAUF,EAASnQ,UAAamQ,EAASG,iBAAoBH,EAASI,WAAcJ,EAASK,SAIvGL,EAASnQ,WAAamQ,EAASG,iBAC/BnQ,EAAS,kHACF,KAEPgQ,EAASnQ,SAASoK,OAAS,KAC3BjK,EAAS,sKACF,IATPA,EAAS,kGACF,GAeX,CAEAE,GAAa,GACbF,EAAS,IAET,IACI,MAAMU,QAAiBC,IAAMC,KAAK,iBAAkB,CAChDsP,MAAOF,EAASE,MAChBrQ,SAAUmQ,EAASnQ,SACnBuQ,UAAWJ,EAASI,UACpBC,SAAUL,EAASK,WAGvB,GAAwB,MAApB3P,EAASG,OAAgB,CAEzB,MAAM2P,QAAsB7P,IAAMC,KAAK,iBAAkB,CACrDlB,SAAUsQ,EAASE,MACnBrQ,SAAUmQ,EAASnQ,WAGvBiB,aAAaC,QAAQ,cAAeyP,EAAcxP,KAAKC,aACvDH,aAAaC,QAAQ,eAAgByP,EAAcxP,KAAKE,cACxDzB,SAEAO,EAASU,EAASM,MAExB,MAAOG,GAAO,IAAAsP,EACmB,OAAb,QAAdA,EAAAtP,EAAMT,gBAAQ,IAAA+P,OAAA,EAAdA,EAAgB5P,QAChBb,EAAS,qKAETA,EAAS,uKACToB,QAAQD,MAAM,gBAAiBA,IAEtC,QACGjB,GAAa,MAQqBG,UAAU,aACpCF,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,SACIiB,KAAK,OACLkH,KAAK,YACLjH,YAAY,wCACZC,MAAOyO,EAASI,UAChB5O,SAAU8O,EACV5O,UAAQ,EACRrB,UAAU,gBAGlBF,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,SACIiB,KAAK,OACLkH,KAAK,WACLjH,YAAY,8CACZC,MAAOyO,EAASK,SAChB7O,SAAU8O,EACV5O,UAAQ,EACRrB,UAAU,gBAGlBF,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,SACIiB,KAAK,QACLkH,KAAK,QACLjH,YAAY,uCACZC,MAAOyO,EAASE,MAChB1O,SAAU8O,EACV5O,UAAQ,EACRrB,UAAU,gBAGlBF,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,SACIiB,KAAK,WACLkH,KAAK,WACLjH,YAAY,iCACZC,MAAOyO,EAASnQ,SAChB2B,SAAU8O,EACV5O,UAAQ,EACRrB,UAAU,gBAGlBF,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,SACIiB,KAAK,WACLkH,KAAK,kBACLjH,YAAY,gEACZC,MAAOyO,EAASG,gBAChB3O,SAAU8O,EACV5O,UAAQ,EACRrB,UAAU,gBAGlBF,IAAAC,cAAA,UACIiB,KAAK,SACLhB,yBAA0BJ,EAAY,UAAY,KAClD0B,SAAU1B,GAETA,EAAY,6DAAkB,kCAGlCF,GACGI,IAAAC,cAAA,OAAKC,UAAU,cACVN,IAKbI,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,SAAG,+EACkB,IACjBD,IAAAC,cAAA,KAAGwB,KAAK,SAASvB,UAAU,aAAY,0DC9GhDqQ,MA9BAA,IAEPvQ,IAAAC,cAACuQ,IAAa,KACVxQ,IAAAC,cAACwQ,IAAM,KACPzQ,IAAAC,cAACyQ,IAAK,CAACC,KAAK,KACR3Q,IAAAC,cAACyQ,IAAK,CAACE,QAAS5Q,IAAAC,cAACkN,EAAS,OACtBnN,IAAAC,cAACyQ,IAAK,CAACE,QAAS5Q,IAAAC,cAACqN,EAAa,OAC9BtN,IAAAC,cAACyQ,IAAK,CAACC,KAAK,UAAUC,QAAS5Q,IAAAC,cAACyK,EAAiB,SAErD1K,IAAAC,cAACyQ,IAAK,CAAC7G,OAAK,EAAC+G,QAAS5Q,IAAAC,cAACoI,EAAY,QAC/BrI,IAAAC,cAACyQ,IAAK,CAACC,KAAK,SAASC,QAAS5Q,IAAAC,cAAC4N,EAAW,QAC1C7N,IAAAC,cAACyQ,IAAK,CAACC,KAAK,QAAQC,QAAS5Q,IAAAC,cAACiP,EAAc,QAC5ClP,IAAAC,cAACyQ,IAAK,CAACC,KAAK,UAAUC,QAAS5Q,IAAAC,cAACuO,EAAW,SAE/CxO,IAAAC,cAACyQ,IAAK,CAACC,KAAK,QAASC,QACjB5Q,IAAAC,cAACwN,EAAY,KACTzN,IAAAC,cAACb,EAAQ,CAACE,WAAYsO,OAG9B5N,IAAAC,cAACyQ,IAAK,CAACC,KAAK,SAAUC,QAClB5Q,IAAAC,cAACwN,EAAY,KACTzN,IAAAC,cAAC2P,EAAU,CAACtQ,WAAYsO,UCpBjCiD,MARHA,IAEN7Q,IAAAC,cAAA,OAAKC,UAAY,aACfF,IAAAC,cAACsQ,EAAM,OCTfO,IAASC,OACL/Q,IAAAC,cAACD,IAAMgR,WAAU,KACbhR,IAAAC,cAAC4Q,EAAG,OAERhJ,SAASoJ,eAAe","file":"static/js/main.44c23520.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './AuthForm.css';\n\nconst AuthForm = ({ loginCheck }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [alert, setAlert] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    loginCheck();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setIsLoading(true);\n        setAlert('');\n\n        try {\n            const response = await axios.post('auth/v1/signIn', { username, password });\n            if (response.status === 200) {\n                localStorage.setItem('accessToken', response.data.accessToken);\n                localStorage.setItem('refreshToken', response.data.refreshToken);\n                loginCheck();\n            } else {\n                setAlert(response.data);\n            }\n        } catch (error) {\n            setAlert('התרחשה שגיאה. אנא נסה שוב.');\n            console.error('Login error:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"auth-container\">\n            <div className=\"auth-form-wrapper\">\n                <h2 className=\"auth-title\">התחברות</h2>\n                <form onSubmit={handleSubmit} className=\"auth-form\">\n                    <div className=\"input-group\">\n                        <input\n                            type=\"email\"\n                            placeholder=\"אימייל\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                            required\n                            className=\"auth-input\"\n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"password\"\n                            placeholder=\"סיסמה\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            required\n                            className=\"auth-input\"\n                        />\n                    </div>\n                    <button\n                        type=\"submit\"\n                        className={`auth-submit ${isLoading ? 'loading' : ''}`}\n                        disabled={isLoading}\n                    >\n                        {isLoading ? 'מתחבר...' : 'התחבר'}\n                    </button>\n\n                    {alert && (\n                        <div className=\"auth-alert\">\n                            {alert}\n                        </div>\n                    )}\n                </form>\n\n                <div className=\"auth-footer\">\n                    <p>\n                        אין לך חשבון עדיין?{' '}\n                        <a href=\"/signup\" className=\"auth-link\">הירשם עכשיו</a>\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AuthForm;","import React from 'react';\nimport './bottom-menu.css';\n\nconst nevigate = (to) => {\n    window.location.href = to;\n};\n\nconst BottomMenu = () => {\n    // Get current path to determine active button\n    const currentPath = window.location.pathname;\n\n    return (\n        <nav className=\"bottom-menu\">\n            <button\n                onClick={() => nevigate('/')}\n                className={currentPath === '/' ? 'active' : ''}\n            >\n                <span className=\"menu-icon\">🎲</span>\n                הניחושים\n            </button>\n            <button\n                onClick={() => nevigate('/rules')}\n                className={currentPath === '/rules' ? 'active' : ''}\n            >\n                <span className=\"menu-icon\">📜</span>\n                החוקים\n            </button>\n            <button\n                onClick={() => nevigate('/league')}\n                className={currentPath === '/league' ? 'active' : ''}\n            >\n                <span className=\"menu-icon\">🏆</span>\n                הליגה\n            </button>\n            <button\n                onClick={() => nevigate('/profile')}\n                className={currentPath === '/profile' ? 'active' : ''}\n            >\n                <span className=\"menu-icon\">👤</span>\n                הפרופיל\n            </button>\n        </nav>\n    );\n};\n\nexport default BottomMenu;","import React from 'react';\nimport { Check, X, Loader2 } from 'lucide-react';\nimport './winning-icon.css';\n\nconst WinningIcon = ({ status, className = '' }) => {\n    const getStatusIcon = () => {\n        switch (status) {\n            case 'winning':\n                return (\n                    <div className=\"flex items-center gap-1 bg-green-100 text-green-700 px-2 py-1 rounded-full\">\n                        <Check size={16} className=\"stroke-2\" />\n                        <span className=\"text-sm font-medium\">מנצח</span>\n                    </div>\n                );\n            case 'losing':\n                return (\n                    <div className=\"flex items-center gap-1 bg-red-100 text-red-700 px-2 py-1 rounded-full\">\n                        <X size={16} className=\"stroke-2\" />\n                        <span className=\"text-sm font-medium\">מפסיד</span>\n                    </div>\n                );\n            case 'pending':\n                return (\n                    <div className=\"flex items-center gap-1 bg-blue-100 text-blue-700 px-2 py-1 rounded-full\">\n                        <Loader2 size={16} className=\"animate-spin stroke-2\" />\n                        <span className=\"text-sm font-medium\">בתהליך</span>\n                    </div>\n                );\n            default:\n                return null;\n        }\n    };\n\n    return (\n        <div className={`winning-status ${className}`}>\n            {getStatusIcon()}\n        </div>\n    );\n};\n\nexport default WinningIcon;","import React, { useState } from \"react\";\nimport { Clock, Coins, Lock, Trophy } from \"lucide-react\";\nimport './event-card.css';\nimport WinningIcon from \"./WinningIcon\";\n\nconst BettingCard = ({\n                         id,\n                         team1,\n                         team2,\n                         startTime,\n                         betType,\n                         onPlaceBet,\n                         disabled,\n                         points,\n                         teamSelected,\n                         win = 0,\n                         howWins\n                     }) => {\n    const [selectedPoints, setSelectedPoints] = useState(Number(points) || 100);\n    const [selectedTeam, setSelectedTeam] = useState(teamSelected || null);\n\n    const handlePointsChange = (amount) => {\n        if (!disabled) {\n            const newPoints = Math.max(100, selectedPoints + amount);\n            setSelectedPoints(newPoints);\n        }\n    };\n\n    const handleTeamSelect = (team) => {\n        if (!disabled) {\n            setSelectedTeam(team === selectedTeam ? null : team);\n        }\n    };\n\n    const handleSubmitBet = () => {\n        if (selectedTeam && !disabled) {\n            onPlaceBet({\n                id,\n                team: selectedTeam,\n                points: selectedPoints\n            });\n        }\n    };\n\n    const calculateWinAmount = () => {\n        if (disabled && win !== 0) {\n            return win * Number(points);\n        }\n        return 0;\n    };\n\n    const winStatus = () => howWins == teamSelected ? \"winning\" : howWins == 0 ? \"pending\" : \"losing\";\n\n    const winAmount = calculateWinAmount();\n    const winningStatus = winStatus();\n    // Helper function to determine if a team is selected\n    const isTeamSelected = (teamNumber) => {\n        return disabled ? teamSelected === teamNumber : selectedTeam === teamNumber;\n    };\n\n    return (\n        <div className={`betting-card ${disabled ? 'disabled-card' : ''}`} dir=\"rtl\">\n            <div className=\"card-header\">\n                <div className=\"header-left\">\n                    <h2 className=\"bet-type\">{betType}</h2>\n                    {disabled && (\n                        <>\n                            <div className=\"disabled-badge\">\n                                <Lock className=\"lock-icon\" size={16} />\n                                <span>הימור סגור</span>\n                            </div>\n                            {winningStatus && (\n                                <WinningIcon status={winningStatus} />\n                            )}\n                        </>\n                    )}\n                </div>\n                <div className=\"date-display\">\n                    <Clock className=\"date-icon\" />\n                    <span>{startTime}</span>\n                </div>\n            </div>\n\n            <div className=\"card-content\">\n                <div className=\"teams-section\">\n                    <div\n                        className={`team-option ${isTeamSelected(1) ? 'selected' : ''} ${\n                            disabled ? 'disabled' : 'clickable'\n                        }`}\n                        onClick={() => handleTeamSelect(1)}\n                        role=\"button\"\n                        tabIndex={disabled ? -1 : 0}\n                    >\n                        <div className=\"team-status\">\n                            <div\n                                className=\"team-logo\"\n                                style={{\n                                    backgroundImage: `url(https://via.placeholder.com/40?text=${team1[0]})`\n                                }}\n                            />\n                            {disabled && teamSelected === 1 && (\n                                <div className=\"win-indicator\">\n                                    <Trophy className=\"trophy-icon\" size={16} />\n                                    <span className=\"win-amount\">+{winAmount}</span>\n                                </div>\n                            )}\n                            {disabled && teamSelected === 2 && (\n                                <div className=\"loss-indicator\">\n                                    <span className=\"loss-amount\">-{points}</span>\n                                </div>\n                            )}\n                        </div>\n                        <span className=\"team-name\">{team1}</span>\n                        {isTeamSelected(1) && (\n                            <div className=\"selected-indicator\">\n                                <span>נבחר</span>\n                            </div>\n                        )}\n                    </div>\n\n                    <span className=\"vs\">VS</span>\n\n                    <div\n                        className={`team-option ${isTeamSelected(2) ? 'selected' : ''} ${\n                            disabled ? 'disabled' : 'clickable'\n                        }`}\n                        onClick={() => handleTeamSelect(2)}\n                        role=\"button\"\n                        tabIndex={disabled ? -1 : 0}\n                    >\n                        <div className=\"team-status\">\n                            <div\n                                className=\"team-logo\"\n                                style={{\n                                    backgroundImage: `url(https://via.placeholder.com/40?text=${team2[0]})`\n                                }}\n                            />\n                            {disabled && teamSelected === 2 && (\n                                <div className=\"win-indicator\">\n                                    <Trophy className=\"trophy-icon\" size={16} />\n                                    <span className=\"win-amount\">+{winAmount}</span>\n                                </div>\n                            )}\n                            {disabled && teamSelected === 1 && (\n                                <div className=\"loss-indicator\">\n                                    <span className=\"loss-amount\">-{points}</span>\n                                </div>\n                            )}\n                        </div>\n                        <span className=\"team-name\">{team2}</span>\n                        {isTeamSelected(2) && (\n                            <div className=\"selected-indicator\">\n                                <span>נבחר</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                {!disabled && (\n                    <>\n                        <div className=\"points-section\">\n                            <div className=\"points-label\">\n                                <Coins className=\"points-icon\" />\n                                <span>נקודות להימור</span>\n                            </div>\n                            <div className=\"points-controls\">\n                                <button\n                                    className=\"points-btn\"\n                                    onClick={() => handlePointsChange(-100)}\n                                >\n                                    -100\n                                </button>\n                                <span className=\"points-display\">{selectedPoints}</span>\n                                <button\n                                    className=\"points-btn\"\n                                    onClick={() => handlePointsChange(100)}\n                                >\n                                    +100\n                                </button>\n                            </div>\n                        </div>\n\n                        <div className=\"submit-section\">\n                            <button\n                                className={`submit-bet ${selectedTeam ? 'active' : 'disabled'}`}\n                                onClick={handleSubmitBet}\n                                disabled={!selectedTeam}\n                            >\n                                שלח ניחוש\n                            </button>\n                        </div>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default BettingCard;","import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n    axiosInstance.interceptors.request.use(request => {\n        const accessToken = localStorage.getItem('accessToken');\n        if (accessToken) {\n            request.headers['Authorization'] = `Bearer ${accessToken}`;\n        }\n        return request;\n    }, error => {\n        return Promise.reject(error);\n    });\n\n    axiosInstance.interceptors.response.use(\n        response => response, // Directly return successful responses.\n        async error => {\n            const originalRequest = error.config;\n            if (error.response.status === 401 && !originalRequest._retry) {\n                originalRequest._retry = true; // Mark the request as retried to avoid infinite loops.\n                try {\n                    const refreshToken = localStorage.getItem('refreshToken'); // Retrieve the stored refresh token.\n                    // Make a request to your auth server to refresh the token.\n                    const response = await axios.post('/auth/v1/refreshToken', {\n                        refreshToken,\n                    });\n                    const {accessToken, refreshToken: newRefreshToken} = response.data;\n                    // Store the new access and refresh tokens.\n                    localStorage.setItem('accessToken', accessToken);\n                    localStorage.setItem('refreshToken', newRefreshToken);\n                    // Update the authorization header with the new access token.\n                    axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n                    return axiosInstance(originalRequest); // Retry the original request with the new access token.\n                } catch (refreshError) {\n                    // Handle refresh token errors by clearing stored tokens and redirecting to the login page.\n                    console.error('Token refresh failed:', refreshError);\n                    localStorage.removeItem('accessToken');\n                    localStorage.removeItem('refreshToken');\n                    window.location.href = '/login';\n                    return Promise.reject(refreshError);\n                }\n            }\n            return Promise.reject(error); // For all other errors, return the error as is.\n        }\n    );\nexport {axiosInstance}","import React, { useEffect, useState } from 'react';\nimport { User, Award } from 'lucide-react';\nimport './user-header.css';\n\nconst UserHeader = ({ username, points }) => {\n    const [isPointsUpdating, setIsPointsUpdating] = useState(false);\n    const [prevPoints, setPrevPoints] = useState(points);\n\n    useEffect(() => {\n        if (prevPoints !== points) {\n            setIsPointsUpdating(true);\n            setPrevPoints(points);\n\n            const timer = setTimeout(() => {\n                setIsPointsUpdating(false);\n            }, 300);\n\n            return () => clearTimeout(timer);\n        }\n    }, [points, prevPoints]);\n\n    return (\n        <header className=\"user-header\">\n            <div className=\"header-container\">\n                <div className=\"header-content\">\n                    <div className=\"user-info\">\n                        <div className=\"avatar-container\">\n                            <User className=\"user-icon\" />\n                        </div>\n                        <div className=\"main-info\">\n                            <div className=\"info-row\">\n                                <h2 className=\"username\">{username}</h2>\n                                <div className=\"points-badge\">\n                                    <Award className=\"award-icon\" />\n                                    <span className={`points-value ${isPointsUpdating ? 'updating' : ''}`}>\n                                        {points}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nconst UserHeaderSkeleton = () => (\n    <header className=\"user-header\">\n        <div className=\"header-container\">\n            <div className=\"header-content\">\n                <div className=\"user-info\">\n                    <div className=\"avatar-container skeleton\"></div>\n                    <div className=\"main-info\">\n                        <div className=\"info-row\">\n                            <div className=\"username skeleton\" style={{width: '120px', height: '24px'}}></div>\n                            <div className=\"points-badge skeleton\" style={{width: '80px', height: '28px'}}></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </header>\n);\n\n\nexport { UserHeader, UserHeaderSkeleton };","import {axiosInstance} from \"./request\";\n\nasync function userLigaApi(){\n    const res = await axiosInstance.get('ligaUser/v1/getUser');\n    return res.data;\n}\n\nexport {userLigaApi}","import React, { useState, useEffect } from 'react';\nimport { axiosInstance } from \"../store/request\";  // Assuming this is your API setup\nimport './create-liga-user.css';\n\nconst UserDialog = ({ isOpen, onClose, onSave }) => {\n    const [nickname, setNickname] = useState('');\n    const [league, setLeague] = useState('');\n    const [leagues, setLeagues] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isLoadingLeagues, setIsLoadingLeagues] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        if (isOpen) {\n            document.body.style.overflow = 'hidden';\n            fetchLeagues();\n        } else {\n            document.body.style.overflow = 'unset';\n        }\n\n        return () => {\n            document.body.style.overflow = 'unset';\n        };\n    }, [isOpen]);\n\n    const fetchLeagues = async () => {\n        setIsLoadingLeagues(true);\n        setError(null);\n        try {\n            const response = await axiosInstance.get('/leagues/v1/getAllLeagues');\n            setLeagues(response.data);\n        } catch (err) {\n            setError('שגיאה בטעינת הליגות');\n            console.error('Error fetching leagues:', err);\n        } finally {\n            setIsLoadingLeagues(false);\n        }\n    };\n\n    const handleSave = async () => {\n        if (!nickname || !league) {\n            alert(\"נא למלא את כל השדות\");\n            return;\n        }\n\n        setIsLoading(true);\n        try {\n            await onSave({ nickname, league });\n            onClose();\n        } catch (error) {\n            alert(\"אירעה שגיאה בתהליך ההרשמה\");\n            console.error('Error saving user data:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    if (!isOpen) return null;\n\n    return (\n        <div className={`dialog-overlay ${isOpen ? 'open' : ''}`}>\n            <div className=\"dialog-container\">\n                {/* Header */}\n                <div className=\"dialog-header\">\n                    <h2 className=\"dialog-title\">הרשמה למשחק</h2>\n                </div>\n\n                {/* Form Content */}\n                <div>\n                    {/* Nickname Input */}\n                    <div className=\"form-group\">\n                        <label className=\"form-label\">כינוי</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-input\"\n                            placeholder=\"הכנס כינוי\"\n                            value={nickname}\n                            onChange={(e) => setNickname(e.target.value)}\n                        />\n                    </div>\n\n                    {/* League Select */}\n                    <div className=\"form-group\">\n                        <label className=\"form-label\">ליגה</label>\n                        {isLoadingLeagues ? (\n                            <div className=\"loading-spinner-small\"></div>\n                        ) : error ? (\n                            <div className=\"error-message\">\n                                {error}\n                                <button\n                                    className=\"retry-button\"\n                                    onClick={fetchLeagues}\n                                >\n                                    נסה שוב\n                                </button>\n                            </div>\n                        ) : (\n                            <select\n                                className=\"form-select\"\n                                value={league}\n                                onChange={(e) => setLeague(e.target.value)}\n                                disabled={isLoadingLeagues}\n                            >\n                                <option value=\"\">בחר ליגה</option>\n                                {leagues.map((league) => (\n                                    <option\n                                        key={league.id}\n                                        value={league.id}\n                                    >\n                                        {league.name}\n                                    </option>\n                                ))}\n                            </select>\n                        )}\n                    </div>\n                </div>\n\n                {/* Footer */}\n                <div className=\"dialog-footer\">\n                    <button\n                        className=\"btn btn-primary\"\n                        onClick={handleSave}\n                        disabled={isLoading || !nickname || !league}\n                    >\n                        {isLoading ? (\n                            <>\n                                <span className=\"loading-spinner\"></span>\n                                שומר...\n                            </>\n                        ) : (\n                            'שמור'\n                        )}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default UserDialog;","import React, { useEffect, useState } from 'react';\nimport BottomMenu from './BottomMenu';\nimport EventCard from \"./EventCard\";\nimport { axiosInstance } from \"../store/request\";\nimport {UserHeader, UserHeaderSkeleton} from \"./UserHeader\";\nimport { userLigaApi } from \"../store/apis\";\nimport './event-listing.css';\nimport CreateLigaUser from \"./CreateLigaUser\";\n\nconst EventListing = () => {\n    const [events, setEvents] = useState([]);\n    const [username, setUsername] = useState(\"\");\n    const [points, setPoints] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [showRegistration, setShowRegistration] = useState(false);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        try {\n            setIsLoading(true);\n            setError(null);\n\n            // Fetch events and user data in parallel\n            const [betsResponse, userBetResponse, userResponse] = await Promise.all([\n                axiosInstance.get('bets/v1/getBets'),\n                axiosInstance.get('bets/v1/getUserBets'),\n                userLigaApi()\n            ]);\n\n            if (!userResponse.nickname) {\n                setShowRegistration(true);\n                return;\n            }\n\n            createUserEvents(betsResponse.data, userBetResponse.data);\n            setUsername(userResponse.nickname);\n            setPoints(userResponse.points);\n        } catch (err) {\n            setError('אירעה שגיאה בטעינת הנתונים');\n            console.error('Error fetching data:', err);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleRegisterUser = async (userData) => {\n        try {\n            // Replace with your actual registration endpoint\n            await axiosInstance.post('ligaUser/v1/createUser', userData);\n            await fetchData(); // Refresh data after registration\n        } catch (error) {\n            console.error('Error registering user:', error);\n            setError('אירעה שגיאה ברישום המשתמש');\n        }\n    };\n\n    const handleRefresh = () => {\n        fetchData();\n    };\n\n    const handleWatch = async (data) => {\n        await axiosInstance.post('/bets/v1/setBet', data);\n        await fetchData();\n    }\n\n    function createUserEvents(betsData, userData){\n        for (const bet in betsData){\n            userData.forEach(user =>{\n                if (user.betid === betsData[bet].id){\n                    betsData[bet].points = user.points\n                    betsData[bet].team =  user.howwins;\n                    betsData[bet].win = user.win\n                }\n            });\n        }\n        setEvents(betsData);\n    }\n\n    return (\n\n        <div className=\"events-page\">\n            <CreateLigaUser\n                isOpen={showRegistration}\n                onClose={() => setShowRegistration(false)}\n                onSave={handleRegisterUser}\n            />\n            <div className=\"top-menu\">\n                {(username) ?  <UserHeader username={username} points={points} /> : <UserHeaderSkeleton/>}\n            </div>\n\n            <div className=\"container\">\n\n                {isLoading ? (\n                    // Loading skeletons\n                    [...Array(3)].map((_, index) => (\n                        <div key={index} className=\"loading-skeleton\" />\n                    ))\n                ) : error ? (\n                    // Error state\n                    <div className=\"error-state\">\n                        <p>{error}</p>\n                        <button onClick={handleRefresh}>נסה שוב</button>\n                    </div>\n                ) : events.length === 0 ? (\n                    // Empty state\n                    <div className=\"empty-state\">\n                        <div className=\"empty-state-icon\">🎲</div>\n                        <p className=\"empty-state-text\">אין הימורים זמינים כרגע</p>\n                        <p className=\"empty-state-subtext\">בדוק שוב מאוחר יותר</p>\n                    </div>\n                ) : (\n                    // Events list\n                    <div className=\"events-list\">\n                        {events.map((event) => (\n                            <EventCard\n                                key={event.id}\n                                id={event.id}\n                                team1={event.teamA}\n                                team2={event.teamB}\n                                startTime={event.dateTime}\n                                disabled={event.disable}\n                                win={Number(event.win)}\n                                betType={event.betName}\n                                points={event.points}\n                                teamSelected={event.team}\n                                onPlaceBet={handleWatch}\n                                howWins={event.howWins}\n                            />\n                        ))}\n                    </div>\n                )}\n            </div>\n\n            {/* Refresh Button */}\n            <button\n                className=\"refresh-button\"\n                onClick={handleRefresh}\n                aria-label=\"רענן רשימה\"\n            >\n                🔄\n            </button>\n\n            <BottomMenu />\n        </div>\n    );\n};\n\nexport default EventListing;","import React, { useState, useEffect } from 'react';\nimport { axiosInstance } from \"../store/request\";\nimport './manager-bet-control.css';\n\nconst Modal = ({ isOpen, onClose, children }) => {\n    if (!isOpen) return null;\n\n    return (\n        <div className=\"modal-overlay\" onClick={onClose}>\n            <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n                <div className=\"modal-header\">\n                    <h3 className=\"modal-title\">Add New</h3>\n                    <button className=\"modal-close\" onClick={onClose}>&times;</button>\n                </div>\n                <div className=\"modal-body\">\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst ManagerBetControl = () => {\n    // State Management\n    const [bets, setBets] = useState([]);\n    const [teams, setTeams] = useState([]);\n    const [betNames, setBetNames] = useState(['Winner', 'Over/Under', 'Both Score']);\n    const [newBet, setNewBet] = useState({\n        teamA: '',\n        teamB: '',\n        betName: '',\n        date: '',\n        hour: ''\n    });\n    const [isTeamModalOpen, setIsTeamModalOpen] = useState(false);\n    const [isBetNameModalOpen, setIsBetNameModalOpen] = useState(false);\n    const [newTeam, setNewTeam] = useState({ name: '', image: null });\n    const [newBetName, setNewBetName] = useState('');\n    const [lastAddedTeam, setLastAddedTeam] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    // Initial Data Fetching\n    useEffect(() => {\n        fetchInitialData();\n    }, []);\n\n    const fetchInitialData = async () => {\n        setIsLoading(true);\n        try {\n            await Promise.all([fetchTeams(), fetchBets()]);\n        } catch (error) {\n            setError('Failed to load initial data');\n            console.error('Error loading initial data:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // Data Fetching Functions\n    const fetchTeams = async () => {\n        try {\n            const teams = await axiosInstance.get('/teams/v1/getTeams')\n            setTeams(Object.keys(teams.data).length === 0 ? [] : teams.data);\n        } catch (error) {\n            console.error('Error fetching teams:', error);\n            throw error;\n        }\n    };\n\n    const fetchBets = async () => {\n        try {\n            const response = await axiosInstance.get('/bets/v1/getBets')\n            setBets(Object.keys(response.data).length === 0 ? [] : response.data);\n        } catch (error) {\n            console.error('Error fetching bets:', error);\n            throw error;\n        }\n    };\n\n    // Form Handlers\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setNewBet(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleAddBet = async () => {\n        if (!validateBetForm()) {\n            setError('Please fill in all fields');\n            return;\n        }\n\n        setIsLoading(true);\n        try {\n            const dateTime = `${newBet.date} ${newBet.hour}`;\n            const bet = { ...newBet, dateTime };\n            await axiosInstance.post('betsManager/v1/setBet', bet);\n            await fetchBets();\n            resetBetForm();\n            setError(null);\n        } catch (error) {\n            setError('Failed to add bet');\n            console.error('Error adding bet:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const validateBetForm = () => {\n        return newBet.teamA && newBet.teamB && newBet.betName && newBet.date && newBet.hour;\n    };\n\n    const resetBetForm = () => {\n        setNewBet({\n            teamA: '',\n            teamB: '',\n            betName: '',\n            date: '',\n            hour: ''\n        });\n    };\n\n    // Bet Management Functions\n    const handleRemoveBet = async (id) => {\n        try {\n            await axiosInstance.post('betsManager/v1/setBetAsExpired', {id: id});\n            await fetchBets();\n        } catch (error) {\n            setError('Failed to remove bet');\n            console.error('Error removing bet:', error);\n        }\n    };\n\n    const handleManualWin = async (id, howWins) => {\n        try {\n            await axiosInstance.post('betsManager/v1/manualWinUpdate', {id: id, howWins: howWins});\n            await fetchBets();\n        } catch (error) {\n            setError('Failed to update winner');\n            console.error('Error updating winner:', error);\n        }\n    };\n\n    // Team Management Functions\n    const handleNewTeamChange = (e) => {\n        const { name, value, files } = e.target;\n        if (name === 'image') {\n            setNewTeam(prev => ({ ...prev, image: files[0] }));\n        } else {\n            setNewTeam(prev => ({ ...prev, [name]: value }));\n        }\n    };\n\n    const handleAddTeam = async (e) => {\n        e.preventDefault();\n        if (!newTeam.name || !newTeam.image) {\n            setError('Please provide both team name and image');\n            return;\n        }\n\n        try {\n            const data = { name: newTeam.name, image: URL.createObjectURL(newTeam.image) };\n            await axiosInstance.post('teams/v1/setTeam', data);\n            await fetchTeams();\n            setIsTeamModalOpen(false);\n            setNewBet(prev => ({ ...prev, [lastAddedTeam]: data.name }));\n            setNewTeam({ name: '', image: null });\n            setError(null);\n        } catch (error) {\n            setError('Failed to add team');\n            console.error('Error adding team:', error);\n        }\n    };\n\n    // Bet Name Management\n    const handleAddBetName = (e) => {\n        e.preventDefault();\n        if (!newBetName) {\n            setError('Please provide a bet name');\n            return;\n        }\n\n        if (!betNames.includes(newBetName)) {\n            setBetNames(prev => [...prev, newBetName]);\n            setIsBetNameModalOpen(false);\n            setNewBet(prev => ({ ...prev, betName: newBetName }));\n            setNewBetName('');\n            setError(null);\n        } else {\n            setError('This bet name already exists');\n        }\n    };\n\n    if (isLoading) {\n        return <div className=\"loading-spinner\">Loading...</div>;\n    }\n\n    return (\n        <div className=\"manager-container\">\n            <h2 className=\"manager-title\">Manager Bet Control</h2>\n\n            {error && <div className=\"error-message\">{error}</div>}\n\n            <div className=\"form-grid\">\n                {/* Team A Selection */}\n                <div className=\"input-wrapper\">\n                    <select\n                        className=\"form-select\"\n                        name=\"teamA\"\n                        value={newBet.teamA}\n                        onChange={handleInputChange}\n                    >\n                        <option value=\"\">Select Team A</option>\n                        {teams.map(team => (\n                            <option key={team.id} value={team.name}>{team.name}</option>\n                        ))}\n                    </select>\n                    <button\n                        className=\"add-button\"\n                        onClick={() => {\n                            setIsTeamModalOpen(true);\n                            setLastAddedTeam('teamA');\n                        }}\n                    >\n                        +\n                    </button>\n                </div>\n\n                {/* Team B Selection */}\n                <div className=\"input-wrapper\">\n                    <select\n                        className=\"form-select\"\n                        name=\"teamB\"\n                        value={newBet.teamB}\n                        onChange={handleInputChange}\n                    >\n                        <option value=\"\">Select Team B</option>\n                        {teams.map(team => (\n                            <option key={team.id} value={team.name}>{team.name}</option>\n                        ))}\n                    </select>\n                    <button\n                        className=\"add-button\"\n                        onClick={() => {\n                            setIsTeamModalOpen(true);\n                            setLastAddedTeam('teamB');\n                        }}\n                    >\n                        +\n                    </button>\n                </div>\n\n                {/* Bet Name Selection */}\n                <div className=\"input-wrapper\">\n                    <select\n                        className=\"form-select\"\n                        name=\"betName\"\n                        value={newBet.betName}\n                        onChange={handleInputChange}\n                    >\n                        <option value=\"\">Select Bet Type</option>\n                        {betNames.map(name => (\n                            <option key={name} value={name}>{name}</option>\n                        ))}\n                    </select>\n                    <button\n                        className=\"add-button\"\n                        onClick={() => setIsBetNameModalOpen(true)}\n                    >\n                        +\n                    </button>\n                </div>\n\n                {/* Date and Time Inputs */}\n                <input\n                    className=\"form-input\"\n                    type=\"date\"\n                    name=\"date\"\n                    value={newBet.date}\n                    onChange={handleInputChange}\n                />\n                <input\n                    className=\"form-input\"\n                    type=\"time\"\n                    name=\"hour\"\n                    value={newBet.hour}\n                    onChange={handleInputChange}\n                />\n            </div>\n\n            <button className=\"submit-button\" onClick={handleAddBet}>\n                Add Bet\n            </button>\n\n            {/* Bets Table */}\n            <div className=\"table-container\">\n                <table className=\"data-table\">\n                    <thead className=\"table-header\">\n                    <tr>\n                        <th>ID</th>\n                        <th>Team A</th>\n                        <th>Team B</th>\n                        <th>Bet Type</th>\n                        <th>How Wins</th>\n                        <th>Date & Time</th>\n                        <th>Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {bets.map(bet => (\n                        <tr key={bet.id} className=\"table-row\">\n                            <td className=\"table-cell\">{bet.id}</td>\n                            <td className=\"table-cell\">{bet.teamA}</td>\n                            <td className=\"table-cell\">{bet.teamB}</td>\n                            <td className=\"table-cell\">{bet.betName}</td>\n                            <td className=\"table-cell\">{bet.howWins}</td>\n                            <td className=\"table-cell\">{bet.dateTime}</td>\n                            <td className=\"table-cell\">\n                                <button\n                                    className=\"action-button win-button\"\n                                    onClick={() => handleManualWin(bet.id, 1)}\n                                >\n                                    Team A Win\n                                </button>\n                                <button\n                                    className=\"action-button win-button\"\n                                    onClick={() => handleManualWin(bet.id, 2)}\n                                >\n                                    Team B Win\n                                </button>\n                                <button\n                                    className=\"action-button remove-button\"\n                                    onClick={() => handleRemoveBet(bet.id)}\n                                >\n                                    Remove\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n\n            {/* Add Team Modal */}\n            <Modal isOpen={isTeamModalOpen} onClose={() => setIsTeamModalOpen(false)}>\n                <form onSubmit={handleAddTeam} className=\"modal-form\">\n                    <div>\n                        <label htmlFor=\"teamName\">Team Name</label>\n                        <input\n                            type=\"text\"\n                            id=\"teamName\"\n                            name=\"name\"\n                            value={newTeam.name}\n                            onChange={handleNewTeamChange}\n                            className=\"modal-input\"\n                            required\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"teamImage\">Team Image</label>\n                        <input\n                            type=\"file\"\n                            id=\"teamImage\"\n                            name=\"image\"\n                            onChange={handleNewTeamChange}\n                            className=\"file-input\"\n                            accept=\"image/*\"\n                            required\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"submit-button\">\n                        Add Team\n                    </button>\n                </form>\n            </Modal>\n\n            {/* Add Bet Name Modal */}\n            <Modal isOpen={isBetNameModalOpen} onClose={() => setIsBetNameModalOpen(false)}>\n                <form onSubmit={handleAddBetName} className=\"modal-form\">\n                    <div>\n                        <label htmlFor=\"betName\">New Bet Type</label>\n                        <input\n                            type=\"text\"\n                            id=\"betName\"\n                            value={newBetName}\n                            onChange={(e) => setNewBetName(e.target.value)}\n                            className=\"modal-input\"\n                            required\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"submit-button\">\n                        Add Bet Type\n                    </button>\n                </form>\n            </Modal>\n        </div>\n    );\n};\n\nexport default ManagerBetControl;","import { Navigate, Outlet } from \"react-router-dom\";\nimport React from 'react';\n\nconst Protected = () => {\n    const token = localStorage.getItem(\"accessToken\");\n    return token ? <Outlet /> : <Navigate to=\"/login\" />;\n};\n\nexport default Protected;","import { Navigate, Outlet } from \"react-router-dom\";\nimport React, {useEffect, useState} from 'react';\nimport {axiosInstance} from \"../store/request\";\n\nconst hasPermission = async () => {\n    let hasPermit;\n     try {\n            const manager = await axiosInstance.get('/auth/v1/getPermission?role=manager');\n            hasPermit = manager.data;\n            } catch (e) {\n            hasPermit = false\n            }\n    return hasPermit;\n}\nconst ManagerRoutes = () => {\n\n    const manager =  hasPermission();\n    return manager ? <Outlet /> : <Navigate to=\"/\" />;\n};\n\nexport default ManagerRoutes;\n\n","import React from \"react\";\nimport {\n    Navigate\n} from \"react-router-dom\";\nconst LoginChecker = ({ children }) => {\n    if (isAuth()) {\n        return <Navigate to=\"/\" replace />;\n    }\n    return children;\n};\n\nconst isAuth = () => localStorage.getItem('accessToken');\n\nconst checkLogin = () => {\n    if (isAuth()) {\n        window.location.href = '/';  // Force refresh to update auth state\n    }\n};\n\nexport {LoginChecker, checkLogin}","import React, {useEffect, useState} from 'react';\nimport './league-table.css';\nimport BottomMenu from \"./BottomMenu\";\nimport {axiosInstance} from \"../store/request\";\n\nconst LeagueTable = () => {\n    const [sortedPlayers, setSortedPlayers] = useState([]);\n    const [leagueName, setLeagueName] = useState(\"\");\n\n    useEffect(() => {\n        fetchLeague();\n    }, []);\n\n    async function fetchLeague(){\n        const league = await axiosInstance.get('leagues/v1/getUserLeague')\n        setLeagueName(league.data.name);\n        setSortedPlayers([...league.data.players].sort((a, b) => b.points - a.points))\n    }\n\n    return (\n        <div className=\"league-table-container\">\n            <div className=\"league-header\">\n                <h2 className=\"league-title\">{leagueName}</h2>\n            </div>\n\n            <div className=\"table-container\">\n                <table className=\"rankings-table\">\n                    <thead>\n                    <tr>\n                        <th>מיקום</th>\n                        <th>כינוי</th>\n                        <th>נקודות</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {sortedPlayers.map((player, index) => (\n                        <tr key={player.nickname}>\n                            <td className=\"position-cell\">#{index + 1}</td>\n                            <td className=\"nickname-cell\">{player.nickname}</td>\n                            <td className=\"points-cell\">{player.points}</td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n            <BottomMenu/>\n        </div>\n    );\n};\n\nexport default LeagueTable;","import React, {useEffect, useState} from 'react';\nimport './profile.css';\nimport BottomMenu from \"./BottomMenu\";\nimport {axiosInstance} from \"../store/request\";\nimport {userLigaApi} from \"../store/apis\";\n\nconst UserProfile = () => {\n    const [userData, setUserData] = useState({});\n    const [betHistory, setBetHistory] = useState([]);\n    useEffect(() => {\n        fetchUser();\n    }, []);\n\n    async function fetchUser(){\n        const [userResponse] = await Promise.all([\n            userLigaApi()\n        ]);\n        setUserData(userResponse)\n    }\n\n\n    return (\n        <div className=\"profile-container\">\n            <div className=\"profile-card\">\n                <div className=\"profile-header\">\n                    <div className=\"profile-main-info\">\n                        <div>\n                            <div className=\"profile-name-section\">\n                                    <>\n                                        <h2 className=\"profile-nickname\">{userData.nickname}</h2>\n                                    </>\n                            </div>\n                            <div className=\"league-selection\">\n                                <span>נקודות: {userData.points}</span>\n                            </div>\n                        </div>\n                        <div className=\"stats-section\">\n                            <div className=\"stat-item\">אחוז הצלחה: {userData.winRate}%</div>\n                            <div className=\"stat-item\">הימורים: {userData.totalBets}</div>\n                        </div>\n                    </div>\n                </div>\n\n                {/*<div className=\"personal-info\">*/}\n                {/*    <h3 className=\"section-title\">פרטים אישיים</h3>*/}\n                {/*    <div className=\"info-grid\">*/}\n                {/*        <div className=\"info-item\">*/}\n                {/*            <span className=\"info-label\">אימייל</span>*/}\n                {/*            <span className=\"info-value\">{userData.email}</span>*/}\n                {/*        </div>*/}\n                {/*        <div className=\"info-item\">*/}\n                {/*            <span className=\"info-label\">תאריך הצטרפות</span>*/}\n                {/*            <span className=\"info-value\">{userData.joinDate}</span>*/}\n                {/*        </div>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n\n                <div className=\"bet-history\">\n                    <h3 className=\"section-title\">היסטוריית הימורים</h3>\n                    <table className=\"history-table\">\n                        <thead>\n                        <tr>\n                            <th>תאריך</th>\n                            <th>משחק</th>\n                            <th>הימור</th>\n                            <th>תוצאה</th>\n                            <th>נקודות</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {betHistory && betHistory.map((bet, index) => (\n                            <tr key={index}>\n                                <td>{bet.date}</td>\n                                <td>{bet.game}</td>\n                                <td>{bet.bet}</td>\n                                <td className={bet.result === 'זכייה' ? 'result-win' : 'result-loss'}>\n                                    {bet.result}\n                                </td>\n                                <td className={bet.points.startsWith('+') ? 'points-positive' : 'points-negative'}>\n                                    {bet.points}\n                                </td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <BottomMenu/>\n        </div>\n    );\n};\n\nexport default UserProfile;","import React, { useState } from 'react';\nimport './rules.css';\nimport BottomMenu from \"./BottomMenu\";\n\nconst RulesComponent = () => {\n    const [expandedSection, setExpandedSection] = useState(null);\n\n    const rulesData = [\n        {\n            id: 1,\n            title: \"חוקים כלליים\",\n            icon: \"📜\",\n            rules: [\n                \"חוק לדוגמה 1\",\n                \"חוק לדוגמה 2\",\n                \"חוק לדוגמה 3\",\n            ]\n        },\n        {\n            id: 2,\n            title: \"מערכת הניקוד\",\n            icon: \"🎯\",\n            rules: [\n                \"חוק ניקוד 1\",\n                \"חוק ניקוד 2\",\n                \"חוק ניקוד 3\",\n            ]\n        },\n        {\n            id: 3,\n            title: \"ניחושים והגבלות\",\n            icon: \"⚖️\",\n            rules: [\n                \"הגבלה 1\",\n                \"הגבלה 2\",\n                \"הגבלה 3\",\n            ]\n        },\n        {\n            id: 4,\n            title: \"פרסים ועונשים\",\n            icon: \"🏆\",\n            rules: [\n                \"חוק פרסים 1\",\n                \"חוק פרסים 2\",\n                \"חוק פרסים 3\",\n            ]\n        }\n    ];\n\n    const toggleSection = (id) => {\n        setExpandedSection(expandedSection === id ? null : id);\n    };\n\n    return (\n        <div className=\"rules-container\">\n            {/* Header */}\n            <div className=\"rules-header\">\n                <h1>חוקי המשחק</h1>\n                <p>כל מה שצריך לדעת כדי להתחיל לשחק</p>\n            </div>\n\n            {/* Rules Content */}\n            <div className=\"rules-content\">\n                {rulesData.map((section) => (\n                    <div key={section.id} className=\"rules-section\">\n                        <button\n                            className=\"section-button\"\n                            onClick={() => toggleSection(section.id)}\n                        >\n                            <div className=\"section-header\">\n                                <span className=\"section-icon\">{section.icon}</span>\n                                <h2 className=\"section-title\">{section.title}</h2>\n                            </div>\n                            <span className={`arrow-icon ${expandedSection === section.id ? 'expanded' : ''}`}>\n                ▼\n              </span>\n                        </button>\n\n                        <div className={`section-content ${expandedSection === section.id ? 'expanded' : ''}`}>\n                            <div className=\"section-content-inner\">\n                                <ul className=\"rules-list\">\n                                    {section.rules.map((rule, index) => (\n                                        <li key={index}>{rule}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            {/* Quick Navigation */}\n            <div className=\"quick-nav\">\n                <h3>ניווט מהיר</h3>\n                <div className=\"quick-nav-buttons\">\n                    {rulesData.map((section) => (\n                        <button\n                            key={section.id}\n                            onClick={() => toggleSection(section.id)}\n                            className={`quick-nav-button ${\n                                expandedSection === section.id ? 'active' : ''\n                            }`}\n                        >\n                            {section.icon} {section.title}\n                        </button>\n                    ))}\n                </div>\n            </div>\n            <BottomMenu/>\n        </div>\n    );\n};\n\nexport default RulesComponent;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport './AuthForm.css';\n\nconst SignupForm = ({ loginCheck }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n        confirmPassword: '',\n        firstName: '',\n        lastName: ''\n    });\n    const [alert, setAlert] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    };\n\n    const validateForm = () => {\n        if (!formData.email || !formData.password || !formData.confirmPassword || !formData.firstName || !formData.lastName) {\n            setAlert('אנא מלא את כל השדות');\n            return false;\n        }\n        if (formData.password !== formData.confirmPassword) {\n            setAlert('הסיסמאות אינן תואמות');\n            return false;\n        }\n        if (formData.password.length < 6) {\n            setAlert('הסיסמה חייבת להכיל לפחות 6 תווים');\n            return false;\n        }\n        return true;\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!validateForm()) return;\n\n        setIsLoading(true);\n        setAlert('');\n\n        try {\n            const response = await axios.post('auth/v1/signup', {\n                email: formData.email,\n                password: formData.password,\n                firstName: formData.firstName,\n                lastName: formData.lastName\n            });\n\n            if (response.status === 201) {\n                // Auto-login after successful signup\n                const loginResponse = await axios.post('auth/v1/signIn', {\n                    username: formData.email,\n                    password: formData.password\n                });\n\n                localStorage.setItem('accessToken', loginResponse.data.accessToken);\n                localStorage.setItem('refreshToken', loginResponse.data.refreshToken);\n                loginCheck();\n            } else {\n                setAlert(response.data);\n            }\n        } catch (error) {\n            if (error.response?.status === 409) {\n                setAlert('כתובת האימייל כבר קיימת במערכת');\n            } else {\n                setAlert('התרחשה שגיאה בהרשמה. אנא נסה שוב.');\n                console.error('Signup error:', error);\n            }\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"auth-container\">\n            <div className=\"auth-form-wrapper\">\n                <h2 className=\"auth-title\">הרשמה</h2>\n                <form onSubmit={handleSubmit} className=\"auth-form\">\n                    <div className=\"input-group\">\n                        <input\n                            type=\"text\"\n                            name=\"firstName\"\n                            placeholder=\"שם פרטי\"\n                            value={formData.firstName}\n                            onChange={handleChange}\n                            required\n                            className=\"auth-input\"\n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"text\"\n                            name=\"lastName\"\n                            placeholder=\"שם משפחה\"\n                            value={formData.lastName}\n                            onChange={handleChange}\n                            required\n                            className=\"auth-input\"\n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"אימייל\"\n                            value={formData.email}\n                            onChange={handleChange}\n                            required\n                            className=\"auth-input\"\n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"סיסמה\"\n                            value={formData.password}\n                            onChange={handleChange}\n                            required\n                            className=\"auth-input\"\n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"password\"\n                            name=\"confirmPassword\"\n                            placeholder=\"אימות סיסמה\"\n                            value={formData.confirmPassword}\n                            onChange={handleChange}\n                            required\n                            className=\"auth-input\"\n                        />\n                    </div>\n                    <button\n                        type=\"submit\"\n                        className={`auth-submit ${isLoading ? 'loading' : ''}`}\n                        disabled={isLoading}\n                    >\n                        {isLoading ? 'מבצע הרשמה...' : 'הירשם'}\n                    </button>\n\n                    {alert && (\n                        <div className=\"auth-alert\">\n                            {alert}\n                        </div>\n                    )}\n                </form>\n\n                <div className=\"auth-footer\">\n                    <p>\n                        כבר יש לך חשבון?{' '}\n                        <a href=\"/login\" className=\"auth-link\">התחבר כאן</a>\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SignupForm;","import {\n    Route,\n    BrowserRouter,\n    Routes\n} from \"react-router-dom\";\nimport AuthForm from '../components/AuthForm';\nimport Protected from \"./PrivateRoutes\";\nimport ManagerRoutes from './managerRoutes'\nimport ManagerBetControl from \"../components/ManagerBetControl\";\nimport EventListing from \"../components/EventListing\";\nimport React from 'react';\nimport {LoginChecker, checkLogin} from \"./helpers\";\nimport LeagueTable from \"../components/LeagueTable\";\nimport UserProfile from \"../components/UserProfile\";\nimport RulesComponent from \"../components/RulesComponent\";\nimport SignupForm from \"../components/SignupForm\";\n\nconst Router = () => {\n    return(\n        <BrowserRouter>\n            <Routes>\n            <Route path=\"/\">\n                <Route element={<Protected />}>\n                    <Route element={<ManagerRoutes/>}>\n                    <Route path=\"manager\" element={<ManagerBetControl />} />\n                </Route>\n                <Route index element={<EventListing />} />\n                    <Route path=\"league\" element={<LeagueTable />} />\n                    <Route path=\"rules\" element={<RulesComponent />} />\n                    <Route path=\"profile\" element={<UserProfile />} />\n                </Route>\n                <Route path=\"login\"  element={\n                    <LoginChecker>\n                        <AuthForm loginCheck={checkLogin} />\n                    </LoginChecker>\n                } />\n                <Route path=\"Signup\"  element={\n                    <LoginChecker>\n                        <SignupForm loginCheck={checkLogin} />\n                    </LoginChecker>\n                } />\n            </Route>\n            </Routes>\n        </BrowserRouter>\n    );\n};\n\nexport default Router;","import React, { useState } from 'react';\nimport AuthForm from './components/AuthForm';\nimport EventListing from './components/EventListing';\nimport './App.css';\nimport ManagerBetControl from \"./components/ManagerBetControl\";\nimport { BrowserRouter, Route, Navigate, Routes } from \"react-router-dom\";\nimport Router from \"./routes/Router\";\n\n\n\nconst App = () => {\n  return (\n      <div className = \"container\">\n        <Router />\n      </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}