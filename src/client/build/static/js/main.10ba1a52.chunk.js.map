{"version":3,"sources":["components/AuthForm.js","components/BottomMenu.js","components/WinningIcon.js","components/EventCard.js","store/request.js","components/UserHeader.js","store/apis.js","components/CreateLigaUser.js","components/EventListing.js","components/LeagueManager.js","components/ManagerBetControl.js","routes/PrivateRoutes.js","routes/managerRoutes.js","routes/helpers.js","components/LeagueTable.js","components/UserProfile.js","components/RulesComponent.js","components/SignupForm.js","routes/Router.js","App.js","index.js"],"names":["httpsAuth","https","Agent","rejectUnauthorized","AuthForm","_ref","loginCheck","username","setUsername","useState","password","setPassword","alert","setAlert","isLoading","setIsLoading","React","createElement","className","onSubmit","async","e","preventDefault","response","axios","post","httpsAgent","status","localStorage","setItem","data","accessToken","refreshToken","error","console","type","placeholder","value","onChange","target","required","disabled","href","nevigate","to","window","location","BottomMenu","currentPath","pathname","onClick","WinningIcon","getStatusIcon","Check","size","X","Loader2","BettingCard","id","team1","team2","startTime","betType","onPlaceBet","points","teamSelected","win","howWins","selectedPoints","setSelectedPoints","Number","selectedTeam","setSelectedTeam","handlePointsChange","amount","newPoints","Math","max","handleTeamSelect","team","winAmount","winningStatus","isTeamSelected","teamNumber","dir","Fragment","Lock","Clock","role","tabIndex","style","backgroundImage","Trophy","Coins","handleSubmitBet","axiosInstance","create","headers","Content-Type","interceptors","request","use","getItem","Promise","reject","originalRequest","config","_retry","newRefreshToken","defaults","common","refreshError","removeItem","UserHeader","isPointsUpdating","setIsPointsUpdating","prevPoints","setPrevPoints","useEffect","timer","setTimeout","clearTimeout","User","Award","UserHeaderSkeleton","width","height","userLigaApi","get","UserDialog","isOpen","onClose","onSave","nickname","setNickname","league","setLeague","leagues","setLeagues","isLoadingLeagues","setIsLoadingLeagues","setError","document","body","overflow","fetchLeagues","err","map","key","name","EventListing","events","setEvents","setPoints","showRegistration","setShowRegistration","fetchData","betsResponse","userBetResponse","userResponse","all","betsData","userData","bet","forEach","user","betid","howwins","createUserEvents","handleRefresh","handleWatch","CreateLigaUser","Array","_","index","length","event","EventCard","teamA","teamB","dateTime","disable","betName","aria-label","LeagueManager","isModalOpen","setIsModalOpen","newLeague","setNewLeague","Object","keys","handleRemoveLeague","stopPropagation","trim","leagueName","htmlFor","Modal","children","ManagerBetControl","bets","setBets","teams","setTeams","betNames","setBetNames","newBet","setNewBet","date","hour","isTeamModalOpen","setIsTeamModalOpen","isBetNameModalOpen","setIsBetNameModalOpen","newTeam","setNewTeam","image","newBetName","setNewBetName","lastAddedTeam","setLastAddedTeam","fetchInitialData","fetchTeams","fetchBets","handleInputChange","prev","[object Object]","validateBetForm","resetBetForm","handleManualWin","handleNewTeamChange","files","handleRemoveBet","URL","createObjectURL","accept","includes","Protected","Outlet","Navigate","ManagerRoutes","hasPermit","hasPermission","LoginChecker","isAuth","replace","checkLogin","LeagueTable","sortedPlayers","setSortedPlayers","setLeagueName","players","sort","a","b","fetchLeague","player","UserProfile","setUserData","betHistory","setBetHistory","fetchUser","winRate","totalBets","game","result","startsWith","RulesComponent","expandedSection","setExpandedSection","rulesData","setRulesData","fetchRules","rules","toggleSection","section","icon","title","rule","SignupForm","formData","setFormData","email","confirmPassword","firstName","lastName","handleChange","prevState","loginResponse","_error$response","Router","BrowserRouter","Routes","Route","path","element","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.10ba1a52.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './AuthForm.css';\nimport https from \"https\";\nconst httpsAuth = new https.Agent({\n    rejectUnauthorized: false\n});\nconst AuthForm = ({ loginCheck }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [alert, setAlert] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    loginCheck();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setIsLoading(true);\n        setAlert('');\n\n        try {\n            const response = await axios.post('auth/v1/signIn', { username, password }, {httpsAgent: httpsAuth});\n            if (response.status === 200) {\n                localStorage.setItem('accessToken', response.data.accessToken);\n                localStorage.setItem('refreshToken', response.data.refreshToken);\n                loginCheck();\n            } else {\n                setAlert(response.data);\n            }\n        } catch (error) {\n            setAlert('התרחשה שגיאה. אנא נסה שוב.');\n            console.error('Login error:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"auth-container\">\n            <div className=\"auth-form-wrapper\">\n                <h2 className=\"auth-title\">התחברות</h2>\n                <form onSubmit={handleSubmit} className=\"auth-form\">\n                    <div className=\"input-group\">\n                        <input\n                            type=\"email\"\n                            placeholder=\"אימייל\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                            required\n                            className=\"auth-input\"\n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"password\"\n                            placeholder=\"סיסמה\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            required\n                            className=\"auth-input\"\n                        />\n                    </div>\n                    <button\n                        type=\"submit\"\n                        className={`auth-submit ${isLoading ? 'loading' : ''}`}\n                        disabled={isLoading}\n                    >\n                        {isLoading ? 'מתחבר...' : 'התחבר'}\n                    </button>\n\n                    {alert && (\n                        <div className=\"auth-alert\">\n                            {alert}\n                        </div>\n                    )}\n                </form>\n\n                <div className=\"auth-footer\">\n                    <p>\n                        אין לך חשבון עדיין?{' '}\n                        <a href=\"/signup\" className=\"auth-link\">הירשם עכשיו</a>\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AuthForm;","import React from 'react';\nimport './bottom-menu.css';\n\nconst nevigate = (to) => {\n    window.location.href = to;\n};\n\nconst BottomMenu = () => {\n    // Get current path to determine active button\n    const currentPath = window.location.pathname;\n\n    return (\n        <nav className=\"bottom-menu\">\n            <button\n                onClick={() => nevigate('/')}\n                className={currentPath === '/' ? 'active' : ''}\n            >\n                <span className=\"menu-icon\">🎲</span>\n                הניחושים\n            </button>\n            <button\n                onClick={() => nevigate('/rules')}\n                className={currentPath === '/rules' ? 'active' : ''}\n            >\n                <span className=\"menu-icon\">📜</span>\n                החוקים\n            </button>\n            <button\n                onClick={() => nevigate('/league')}\n                className={currentPath === '/league' ? 'active' : ''}\n            >\n                <span className=\"menu-icon\">🏆</span>\n                הליגה\n            </button>\n            <button\n                onClick={() => nevigate('/profile')}\n                className={currentPath === '/profile' ? 'active' : ''}\n            >\n                <span className=\"menu-icon\">👤</span>\n                הפרופיל\n            </button>\n        </nav>\n    );\n};\n\nexport default BottomMenu;","import React from 'react';\nimport { Check, X, Loader2 } from 'lucide-react';\nimport './winning-icon.css';\n\nconst WinningIcon = ({ status, className = '' }) => {\n    const getStatusIcon = () => {\n        switch (status) {\n            case 'winning':\n                return (\n                    <div className=\"flex items-center gap-1 bg-green-100 text-green-700 px-2 py-1 rounded-full\">\n                        <Check size={16} className=\"stroke-2\" />\n                        <span className=\"text-sm font-medium\">מנצח</span>\n                    </div>\n                );\n            case 'losing':\n                return (\n                    <div className=\"flex items-center gap-1 bg-red-100 text-red-700 px-2 py-1 rounded-full\">\n                        <X size={16} className=\"stroke-2\" />\n                        <span className=\"text-sm font-medium\">מפסיד</span>\n                    </div>\n                );\n            case 'pending':\n                return (\n                    <div className=\"flex items-center gap-1 bg-blue-100 text-blue-700 px-2 py-1 rounded-full\">\n                        <Loader2 size={16} className=\"animate-spin stroke-2\" />\n                        <span className=\"text-sm font-medium\">בתהליך</span>\n                    </div>\n                );\n            default:\n                return null;\n        }\n    };\n\n    return (\n        <div className={`winning-status ${className}`}>\n            {getStatusIcon()}\n        </div>\n    );\n};\n\nexport default WinningIcon;","import React, { useState } from \"react\";\nimport { Clock, Coins, Lock, Trophy } from \"lucide-react\";\nimport './event-card.css';\nimport WinningIcon from \"./WinningIcon\";\n\nconst BettingCard = ({\n                         id,\n                         team1,\n                         team2,\n                         startTime,\n                         betType,\n                         onPlaceBet,\n                         disabled,\n                         points,\n                         teamSelected,\n                         win = 0,\n                         howWins\n                     }) => {\n    const [selectedPoints, setSelectedPoints] = useState(Number(points) || 100);\n    const [selectedTeam, setSelectedTeam] = useState(teamSelected || null);\n\n    const handlePointsChange = (amount) => {\n        if (!disabled) {\n            const newPoints = Math.max(100, selectedPoints + amount);\n            setSelectedPoints(newPoints);\n        }\n    };\n\n    const handleTeamSelect = (team) => {\n        if (!disabled) {\n            setSelectedTeam(team === selectedTeam ? null : team);\n        }\n    };\n\n    const handleSubmitBet = () => {\n        if (selectedTeam && !disabled) {\n            onPlaceBet({\n                id,\n                team: selectedTeam,\n                points: selectedPoints\n            });\n        }\n    };\n\n    const calculateWinAmount = () => {\n        if (disabled && win !== 0) {\n            return win * Number(points);\n        }\n        return 0;\n    };\n\n    const winStatus = () => howWins == teamSelected ? \"winning\" : howWins == 0 ? \"pending\" : \"losing\";\n\n    const winAmount = calculateWinAmount();\n    const winningStatus = winStatus();\n    // Helper function to determine if a team is selected\n    const isTeamSelected = (teamNumber) => {\n        return disabled ? teamSelected === teamNumber : selectedTeam === teamNumber;\n    };\n\n    return (\n        <div className={`betting-card ${disabled ? 'disabled-card' : ''}`} dir=\"rtl\">\n            <div className=\"card-header\">\n                <div className=\"header-left\">\n                    <h2 className=\"bet-type\">{betType}</h2>\n                    {disabled && (\n                        <>\n                            <div className=\"disabled-badge\">\n                                <Lock className=\"lock-icon\" size={16} />\n                                <span>הימור סגור</span>\n                            </div>\n                            {winningStatus && (\n                                <WinningIcon status={winningStatus} />\n                            )}\n                        </>\n                    )}\n                </div>\n                <div className=\"date-display\">\n                    <Clock className=\"date-icon\" />\n                    <span>{startTime}</span>\n                </div>\n            </div>\n\n            <div className=\"card-content\">\n                <div className=\"teams-section\">\n                    <div\n                        className={`team-option ${isTeamSelected(1) ? 'selected' : ''} ${\n                            disabled ? 'disabled' : 'clickable'\n                        }`}\n                        onClick={() => handleTeamSelect(1)}\n                        role=\"button\"\n                        tabIndex={disabled ? -1 : 0}\n                    >\n                        <div className=\"team-status\">\n                            <div\n                                className=\"team-logo\"\n                                style={{\n                                    backgroundImage: `url(https://via.placeholder.com/40?text=${team1[0]})`\n                                }}\n                            />\n                            {disabled && teamSelected === 1 && (\n                                <div className=\"win-indicator\">\n                                    <Trophy className=\"trophy-icon\" size={16} />\n                                    <span className=\"win-amount\">+{winAmount}</span>\n                                </div>\n                            )}\n                            {disabled && teamSelected === 2 && (\n                                <div className=\"loss-indicator\">\n                                    <span className=\"loss-amount\">-{points}</span>\n                                </div>\n                            )}\n                        </div>\n                        <span className=\"team-name\">{team1}</span>\n                        {isTeamSelected(1) && (\n                            <div className=\"selected-indicator\">\n                                <span>נבחר</span>\n                            </div>\n                        )}\n                    </div>\n\n                    <span className=\"vs\">VS</span>\n\n                    <div\n                        className={`team-option ${isTeamSelected(2) ? 'selected' : ''} ${\n                            disabled ? 'disabled' : 'clickable'\n                        }`}\n                        onClick={() => handleTeamSelect(2)}\n                        role=\"button\"\n                        tabIndex={disabled ? -1 : 0}\n                    >\n                        <div className=\"team-status\">\n                            <div\n                                className=\"team-logo\"\n                                style={{\n                                    backgroundImage: `url(https://via.placeholder.com/40?text=${team2[0]})`\n                                }}\n                            />\n                            {disabled && teamSelected === 2 && (\n                                <div className=\"win-indicator\">\n                                    <Trophy className=\"trophy-icon\" size={16} />\n                                    <span className=\"win-amount\">+{winAmount}</span>\n                                </div>\n                            )}\n                            {disabled && teamSelected === 1 && (\n                                <div className=\"loss-indicator\">\n                                    <span className=\"loss-amount\">-{points}</span>\n                                </div>\n                            )}\n                        </div>\n                        <span className=\"team-name\">{team2}</span>\n                        {isTeamSelected(2) && (\n                            <div className=\"selected-indicator\">\n                                <span>נבחר</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                {!disabled && (\n                    <>\n                        <div className=\"points-section\">\n                            <div className=\"points-label\">\n                                <Coins className=\"points-icon\" />\n                                <span>נקודות להימור</span>\n                            </div>\n                            <div className=\"points-controls\">\n                                <button\n                                    className=\"points-btn\"\n                                    onClick={() => handlePointsChange(-100)}\n                                >\n                                    -100\n                                </button>\n                                <span className=\"points-display\">{selectedPoints}</span>\n                                <button\n                                    className=\"points-btn\"\n                                    onClick={() => handlePointsChange(100)}\n                                >\n                                    +100\n                                </button>\n                            </div>\n                        </div>\n\n                        <div className=\"submit-section\">\n                            <button\n                                className={`submit-bet ${selectedTeam ? 'active' : 'disabled'}`}\n                                onClick={handleSubmitBet}\n                                disabled={!selectedTeam}\n                            >\n                                שלח ניחוש\n                            </button>\n                        </div>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default BettingCard;","import axios from \"axios\";\nimport https from \"https\";\nconst httpsAuth = new https.Agent({\n    rejectUnauthorized: false\n});\nconst axiosInstance = axios.create({\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    httpsAgent: httpsAuth,\n});\n    axiosInstance.interceptors.request.use(request => {\n        const accessToken = localStorage.getItem('accessToken');\n        if (accessToken) {\n            request.headers['Authorization'] = `Bearer ${accessToken}`;\n        }\n        return request;\n    }, error => {\n        return Promise.reject(error);\n    });\n\n    axiosInstance.interceptors.response.use(\n        response => response, // Directly return successful responses.\n        async error => {\n            const originalRequest = error.config;\n            if (error.response.status === 401 && !originalRequest._retry) {\n                originalRequest._retry = true; // Mark the request as retried to avoid infinite loops.\n                try {\n                    const refreshToken = localStorage.getItem('refreshToken'); // Retrieve the stored refresh token.\n                    // Make a request to your auth server to refresh the token.\n                    const response = await axios.post('/auth/v1/refreshToken', {\n                        refreshToken,\n                    });\n                    const {accessToken, refreshToken: newRefreshToken} = response.data;\n                    // Store the new access and refresh tokens.\n                    localStorage.setItem('accessToken', accessToken);\n                    localStorage.setItem('refreshToken', newRefreshToken);\n                    // Update the authorization header with the new access token.\n                    axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n                    return axiosInstance(originalRequest); // Retry the original request with the new access token.\n                } catch (refreshError) {\n                    // Handle refresh token errors by clearing stored tokens and redirecting to the login page.\n                    console.error('Token refresh failed:', refreshError);\n                    localStorage.removeItem('accessToken');\n                    localStorage.removeItem('refreshToken');\n                    window.location.href = '/login';\n                    return Promise.reject(refreshError);\n                }\n            }\n            return Promise.reject(error); // For all other errors, return the error as is.\n        }\n    );\nexport {axiosInstance}","import React, { useEffect, useState } from 'react';\nimport { User, Award } from 'lucide-react';\nimport './user-header.css';\n\nconst UserHeader = ({ username, points }) => {\n    const [isPointsUpdating, setIsPointsUpdating] = useState(false);\n    const [prevPoints, setPrevPoints] = useState(points);\n\n    useEffect(() => {\n        if (prevPoints !== points) {\n            setIsPointsUpdating(true);\n            setPrevPoints(points);\n\n            const timer = setTimeout(() => {\n                setIsPointsUpdating(false);\n            }, 300);\n\n            return () => clearTimeout(timer);\n        }\n    }, [points, prevPoints]);\n\n    return (\n        <header className=\"user-header\">\n            <div className=\"header-container\">\n                <div className=\"header-content\">\n                    <div className=\"user-info\">\n                        <div className=\"avatar-container\">\n                            <User className=\"user-icon\" />\n                        </div>\n                        <div className=\"main-info\">\n                            <div className=\"info-row\">\n                                <h2 className=\"username\">{username}</h2>\n                                <div className=\"points-badge\">\n                                    <Award className=\"award-icon\" />\n                                    <span className={`points-value ${isPointsUpdating ? 'updating' : ''}`}>\n                                        {points}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nconst UserHeaderSkeleton = () => (\n    <header className=\"user-header\">\n        <div className=\"header-container\">\n            <div className=\"header-content\">\n                <div className=\"user-info\">\n                    <div className=\"avatar-container skeleton\"></div>\n                    <div className=\"main-info\">\n                        <div className=\"info-row\">\n                            <div className=\"username skeleton\" style={{width: '120px', height: '24px'}}></div>\n                            <div className=\"points-badge skeleton\" style={{width: '80px', height: '28px'}}></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </header>\n);\n\n\nexport { UserHeader, UserHeaderSkeleton };","import {axiosInstance} from \"./request\";\n\nasync function userLigaApi(){\n    const res = await axiosInstance.get('ligaUser/v1/getUser');\n    return res.data;\n}\n\nexport {userLigaApi}","import React, { useState, useEffect } from 'react';\nimport { axiosInstance } from \"../store/request\";  // Assuming this is your API setup\nimport './create-liga-user.css';\n\nconst UserDialog = ({ isOpen, onClose, onSave }) => {\n    const [nickname, setNickname] = useState('');\n    const [league, setLeague] = useState('');\n    const [leagues, setLeagues] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isLoadingLeagues, setIsLoadingLeagues] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        if (isOpen) {\n            document.body.style.overflow = 'hidden';\n            fetchLeagues();\n        } else {\n            document.body.style.overflow = 'unset';\n        }\n\n        return () => {\n            document.body.style.overflow = 'unset';\n        };\n    }, [isOpen]);\n\n    const fetchLeagues = async () => {\n        setIsLoadingLeagues(true);\n        setError(null);\n        try {\n            const response = await axiosInstance.get('/leagues/v1/getAllLeagues');\n            setLeagues(response.data);\n        } catch (err) {\n            setError('שגיאה בטעינת הליגות');\n            console.error('Error fetching leagues:', err);\n        } finally {\n            setIsLoadingLeagues(false);\n        }\n    };\n\n    const handleSave = async () => {\n        if (!nickname || !league) {\n            alert(\"נא למלא את כל השדות\");\n            return;\n        }\n\n        setIsLoading(true);\n        try {\n            await onSave({ nickname, league });\n            onClose();\n        } catch (error) {\n            alert(\"אירעה שגיאה בתהליך ההרשמה\");\n            console.error('Error saving user data:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    if (!isOpen) return null;\n\n    return (\n        <div className={`dialog-overlay ${isOpen ? 'open' : ''}`}>\n            <div className=\"dialog-container\">\n                {/* Header */}\n                <div className=\"dialog-header\">\n                    <h2 className=\"dialog-title\">הרשמה למשחק</h2>\n                </div>\n\n                {/* Form Content */}\n                <div>\n                    {/* Nickname Input */}\n                    <div className=\"form-group\">\n                        <label className=\"form-label\">כינוי</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-input\"\n                            placeholder=\"הכנס כינוי\"\n                            value={nickname}\n                            onChange={(e) => setNickname(e.target.value)}\n                        />\n                    </div>\n\n                    {/* League Select */}\n                    <div className=\"form-group\">\n                        <label className=\"form-label\">ליגה</label>\n                        {isLoadingLeagues ? (\n                            <div className=\"loading-spinner-small\"></div>\n                        ) : error ? (\n                            <div className=\"error-message\">\n                                {error}\n                                <button\n                                    className=\"retry-button\"\n                                    onClick={fetchLeagues}\n                                >\n                                    נסה שוב\n                                </button>\n                            </div>\n                        ) : (\n                            <select\n                                className=\"form-select\"\n                                value={league}\n                                onChange={(e) => setLeague(e.target.value)}\n                                disabled={isLoadingLeagues}\n                            >\n                                <option value=\"\">בחר ליגה</option>\n                                {leagues.map((league) => (\n                                    <option\n                                        key={league.id}\n                                        value={league.id}\n                                    >\n                                        {league.name}\n                                    </option>\n                                ))}\n                            </select>\n                        )}\n                    </div>\n                </div>\n\n                {/* Footer */}\n                <div className=\"dialog-footer\">\n                    <button\n                        className=\"btn btn-primary\"\n                        onClick={handleSave}\n                        disabled={isLoading || !nickname || !league}\n                    >\n                        {isLoading ? (\n                            <>\n                                <span className=\"loading-spinner\"></span>\n                                שומר...\n                            </>\n                        ) : (\n                            'שמור'\n                        )}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default UserDialog;","import React, { useEffect, useState } from 'react';\nimport BottomMenu from './BottomMenu';\nimport EventCard from \"./EventCard\";\nimport { axiosInstance } from \"../store/request\";\nimport {UserHeader, UserHeaderSkeleton} from \"./UserHeader\";\nimport { userLigaApi } from \"../store/apis\";\nimport './event-listing.css';\nimport CreateLigaUser from \"./CreateLigaUser\";\n\nconst EventListing = () => {\n    const [events, setEvents] = useState([]);\n    const [username, setUsername] = useState(\"\");\n    const [points, setPoints] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [showRegistration, setShowRegistration] = useState(false);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        try {\n            setIsLoading(true);\n            setError(null);\n\n            // Fetch events and user data in parallel\n            const [betsResponse, userBetResponse, userResponse] = await Promise.all([\n                axiosInstance.get('bets/v1/getBets'),\n                axiosInstance.get('bets/v1/getUserBets'),\n                userLigaApi()\n            ]);\n\n            if (!userResponse.nickname) {\n                setShowRegistration(true);\n                return;\n            }\n\n            createUserEvents(betsResponse.data, userBetResponse.data);\n            setUsername(userResponse.nickname);\n            setPoints(userResponse.points);\n        } catch (err) {\n            setError('אירעה שגיאה בטעינת הנתונים');\n            console.error('Error fetching data:', err);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleRegisterUser = async (userData) => {\n        try {\n            // Replace with your actual registration endpoint\n            await axiosInstance.post('ligaUser/v1/createUser', userData);\n            await fetchData(); // Refresh data after registration\n        } catch (error) {\n            console.error('Error registering user:', error);\n            setError('אירעה שגיאה ברישום המשתמש');\n        }\n    };\n\n    const handleRefresh = () => {\n        fetchData();\n    };\n\n    const handleWatch = async (data) => {\n        await axiosInstance.post('/bets/v1/setBet', data);\n        await fetchData();\n    }\n\n    function createUserEvents(betsData, userData){\n        for (const bet in betsData){\n            userData.forEach(user =>{\n                if (user.betid === betsData[bet].id){\n                    betsData[bet].points = user.points\n                    betsData[bet].team =  user.howwins;\n                    betsData[bet].win = user.win\n                }\n            });\n        }\n        setEvents(betsData);\n    }\n\n    return (\n\n        <div className=\"events-page\">\n            <CreateLigaUser\n                isOpen={showRegistration}\n                onClose={() => setShowRegistration(false)}\n                onSave={handleRegisterUser}\n            />\n            <div className=\"top-menu\">\n                {(username) ?  <UserHeader username={username} points={points} /> : <UserHeaderSkeleton/>}\n            </div>\n\n            <div className=\"container\">\n\n                {isLoading ? (\n                    // Loading skeletons\n                    [...Array(3)].map((_, index) => (\n                        <div key={index} className=\"loading-skeleton\" />\n                    ))\n                ) : error ? (\n                    // Error state\n                    <div className=\"error-state\">\n                        <p>{error}</p>\n                        <button onClick={handleRefresh}>נסה שוב</button>\n                    </div>\n                ) : events.length === 0 ? (\n                    // Empty state\n                    <div className=\"empty-state\">\n                        <div className=\"empty-state-icon\">🎲</div>\n                        <p className=\"empty-state-text\">אין הימורים זמינים כרגע</p>\n                        <p className=\"empty-state-subtext\">בדוק שוב מאוחר יותר</p>\n                    </div>\n                ) : (\n                    // Events list\n                    <div className=\"events-list\">\n                        {events.map((event) => (\n                            <EventCard\n                                key={event.id}\n                                id={event.id}\n                                team1={event.teamA}\n                                team2={event.teamB}\n                                startTime={event.dateTime}\n                                disabled={event.disable}\n                                win={Number(event.win)}\n                                betType={event.betName}\n                                points={event.points}\n                                teamSelected={event.team}\n                                onPlaceBet={handleWatch}\n                                howWins={event.howWins}\n                            />\n                        ))}\n                    </div>\n                )}\n            </div>\n\n            {/* Refresh Button */}\n            <button\n                className=\"refresh-button\"\n                onClick={handleRefresh}\n                aria-label=\"רענן רשימה\"\n            >\n                🔄\n            </button>\n\n            <BottomMenu />\n        </div>\n    );\n};\n\nexport default EventListing;","import React, { useState, useEffect } from 'react';\nimport { axiosInstance } from \"../store/request\";\nimport './LeagueManager.css';\nconst LeagueManager = () => {\n    const [leagues, setLeagues] = useState([]);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [newLeague, setNewLeague] = useState('');\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        fetchLeagues();\n    }, []);\n\n    const fetchLeagues = async () => {\n        setIsLoading(true);\n        try {\n            const response = await axiosInstance.get('/leagues/v1/getAllLeagues');\n            setLeagues(Object.keys(response.data).length === 0 ? [] : response.data);\n        } catch (error) {\n            console.error('Error fetching leagues:', error);\n            setError('Failed to load leagues');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleAddLeague = async (e) => {\n        e.preventDefault();\n        if (!newLeague.trim()) {\n            setError('Please enter a league name');\n            return;\n        }\n\n        setIsLoading(true);\n        try {\n            await axiosInstance.post('leagues/v1/insertLeague', { leagueName: newLeague });\n            await fetchLeagues();\n            setNewLeague('');\n            setIsModalOpen(false);\n            setError(null);\n        } catch (error) {\n            console.error('Error adding league:', error);\n            setError('Failed to add league');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleRemoveLeague = async (id) => {\n        try {\n            await axiosInstance.post('leagues/v1/removeLeague', { id });\n            await fetchLeagues();\n        } catch (error) {\n            console.error('Error removing league:', error);\n            setError('Failed to remove league');\n        }\n    };\n\n    return (\n        <div className=\"league-manager\">\n            <div className=\"league-header\">\n                <h3 className=\"section-title\">Leagues</h3>\n                <button\n                    className=\"add-league-button\"\n                    onClick={() => setIsModalOpen(true)}\n                >\n                    Add League\n                </button>\n            </div>\n\n            {error && <div className=\"error-message\">{error}</div>}\n\n            <div className=\"table-container\">\n                <table className=\"data-table\">\n                    <thead className=\"table-header\">\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {leagues.map(league => (\n                        <tr key={league.id} className=\"table-row\">\n                            <td className=\"table-cell\">{league.id}</td>\n                            <td className=\"table-cell\">{league.name}</td>\n                            <td className=\"table-cell\">\n                                <div className=\"action-buttons\">\n                                    <button\n                                        className=\"action-button remove-button\"\n                                        onClick={() => handleRemoveLeague(league.id)}\n                                    >\n                                        Remove\n                                    </button>\n                                </div>\n                            </td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n\n\n            {/* Add League Modal */}\n            {isModalOpen && (\n                <div className=\"modal-overlay\" onClick={() => setIsModalOpen(false)}>\n                    <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n                        <div className=\"modal-header\">\n                            <h3 className=\"modal-title\">Add New League</h3>\n                            <button\n                                className=\"modal-close\"\n                                onClick={() => setIsModalOpen(false)}\n                            >\n                                &times;\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <form onSubmit={handleAddLeague} className=\"modal-form\">\n                                <div>\n                                    <label htmlFor=\"leagueName\">League Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"leagueName\"\n                                        value={newLeague}\n                                        onChange={(e) => setNewLeague(e.target.value)}\n                                        className=\"modal-input\"\n                                        required\n                                    />\n                                </div>\n                                <button\n                                    type=\"submit\"\n                                    className=\"submit-button\"\n                                    disabled={isLoading}\n                                >\n                                    {isLoading ? 'Adding...' : 'Add League'}\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default LeagueManager;","import React, { useState, useEffect } from 'react';\nimport { axiosInstance } from \"../store/request\";\nimport './manager-bet-control.css';\nimport LeagueManager from './LeagueManager';\n\nconst Modal = ({ isOpen, onClose, children }) => {\n    if (!isOpen) return null;\n\n    return (\n        <div className=\"modal-overlay\" onClick={onClose}>\n            <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n                <div className=\"modal-header\">\n                    <h3 className=\"modal-title\">Add New</h3>\n                    <button className=\"modal-close\" onClick={onClose}>&times;</button>\n                </div>\n                <div className=\"modal-body\">\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst ManagerBetControl = () => {\n    // State Management\n    const [bets, setBets] = useState([]);\n    const [teams, setTeams] = useState([]);\n    const [betNames, setBetNames] = useState(['Winner', 'Over/Under', 'Both Score']);\n    const [newBet, setNewBet] = useState({\n        teamA: '',\n        teamB: '',\n        betName: '',\n        date: '',\n        hour: ''\n    });\n    const [isTeamModalOpen, setIsTeamModalOpen] = useState(false);\n    const [isBetNameModalOpen, setIsBetNameModalOpen] = useState(false);\n    const [newTeam, setNewTeam] = useState({ name: '', image: null });\n    const [newBetName, setNewBetName] = useState('');\n    const [lastAddedTeam, setLastAddedTeam] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    // Initial Data Fetching\n    useEffect(() => {\n        fetchInitialData();\n    }, []);\n\n    const fetchInitialData = async () => {\n        setIsLoading(true);\n        try {\n            await Promise.all([fetchTeams(), fetchBets()]);\n        } catch (error) {\n            setError('Failed to load initial data');\n            console.error('Error loading initial data:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // Data Fetching Functions\n    const fetchTeams = async () => {\n        try {\n            const teams = await axiosInstance.get('/teams/v1/getTeams')\n            setTeams(Object.keys(teams.data).length === 0 ? [] : teams.data);\n        } catch (error) {\n            console.error('Error fetching teams:', error);\n            throw error;\n        }\n    };\n\n    const fetchBets = async () => {\n        try {\n            const response = await axiosInstance.get('/bets/v1/getBets')\n            setBets(Object.keys(response.data).length === 0 ? [] : response.data);\n        } catch (error) {\n            console.error('Error fetching bets:', error);\n            throw error;\n        }\n    };\n\n    // Form Handlers\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setNewBet(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleAddBet = async () => {\n        if (!validateBetForm()) {\n            setError('Please fill in all fields');\n            return;\n        }\n\n        setIsLoading(true);\n        try {\n            const dateTime = `${newBet.date} ${newBet.hour}`;\n            const bet = { ...newBet, dateTime };\n            await axiosInstance.post('betsManager/v1/setBet', bet);\n            await fetchBets();\n            resetBetForm();\n            setError(null);\n        } catch (error) {\n            setError('Failed to add bet');\n            console.error('Error adding bet:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const validateBetForm = () => {\n        return newBet.teamA && newBet.teamB && newBet.betName && newBet.date && newBet.hour;\n    };\n\n    const resetBetForm = () => {\n        setNewBet({\n            teamA: '',\n            teamB: '',\n            betName: '',\n            date: '',\n            hour: ''\n        });\n    };\n\n    // Bet Management Functions\n    const handleRemoveBet = async (id) => {\n        try {\n            await axiosInstance.post('betsManager/v1/setBetAsExpired', {id: id});\n            await fetchBets();\n        } catch (error) {\n            setError('Failed to remove bet');\n            console.error('Error removing bet:', error);\n        }\n    };\n\n    const handleManualWin = async (id, howWins) => {\n        try {\n            await axiosInstance.post('betsManager/v1/manualWinUpdate', {id: id, howWins: howWins});\n            await fetchBets();\n        } catch (error) {\n            setError('Failed to update winner');\n            console.error('Error updating winner:', error);\n        }\n    };\n\n    // Team Management Functions\n    const handleNewTeamChange = (e) => {\n        const { name, value, files } = e.target;\n        if (name === 'image') {\n            setNewTeam(prev => ({ ...prev, image: files[0] }));\n        } else {\n            setNewTeam(prev => ({ ...prev, [name]: value }));\n        }\n    };\n\n    const handleAddTeam = async (e) => {\n        e.preventDefault();\n        if (!newTeam.name || !newTeam.image) {\n            setError('Please provide both team name and image');\n            return;\n        }\n\n        try {\n            const data = { name: newTeam.name, image: URL.createObjectURL(newTeam.image) };\n            await axiosInstance.post('teams/v1/setTeam', data);\n            await fetchTeams();\n            setIsTeamModalOpen(false);\n            setNewBet(prev => ({ ...prev, [lastAddedTeam]: data.name }));\n            setNewTeam({ name: '', image: null });\n            setError(null);\n        } catch (error) {\n            setError('Failed to add team');\n            console.error('Error adding team:', error);\n        }\n    };\n\n    // Bet Name Management\n    const handleAddBetName = (e) => {\n        e.preventDefault();\n        if (!newBetName) {\n            setError('Please provide a bet name');\n            return;\n        }\n\n        if (!betNames.includes(newBetName)) {\n            setBetNames(prev => [...prev, newBetName]);\n            setIsBetNameModalOpen(false);\n            setNewBet(prev => ({ ...prev, betName: newBetName }));\n            setNewBetName('');\n            setError(null);\n        } else {\n            setError('This bet name already exists');\n        }\n    };\n\n    if (isLoading) {\n        return <div className=\"loading-spinner\">Loading...</div>;\n    }\n\n    return (\n        <div className=\"manager-container\">\n                <LeagueManager />\n            <h2 className=\"manager-title\">Manager Bet Control</h2>\n\n            {error && <div className=\"error-message\">{error}</div>}\n\n            <div className=\"form-grid\">\n                {/* Team A Selection */}\n                <div className=\"input-wrapper\">\n                    <select\n                        className=\"form-select\"\n                        name=\"teamA\"\n                        value={newBet.teamA}\n                        onChange={handleInputChange}\n                    >\n                        <option value=\"\">Select Team A</option>\n                        {teams.map(team => (\n                            <option key={team.id} value={team.name}>{team.name}</option>\n                        ))}\n                    </select>\n                    <button\n                        className=\"add-button\"\n                        onClick={() => {\n                            setIsTeamModalOpen(true);\n                            setLastAddedTeam('teamA');\n                        }}\n                    >\n                        +\n                    </button>\n                </div>\n\n                {/* Team B Selection */}\n                <div className=\"input-wrapper\">\n                    <select\n                        className=\"form-select\"\n                        name=\"teamB\"\n                        value={newBet.teamB}\n                        onChange={handleInputChange}\n                    >\n                        <option value=\"\">Select Team B</option>\n                        {teams.map(team => (\n                            <option key={team.id} value={team.name}>{team.name}</option>\n                        ))}\n                    </select>\n                    <button\n                        className=\"add-button\"\n                        onClick={() => {\n                            setIsTeamModalOpen(true);\n                            setLastAddedTeam('teamB');\n                        }}\n                    >\n                        +\n                    </button>\n                </div>\n\n                {/* Bet Name Selection */}\n                <div className=\"input-wrapper\">\n                    <select\n                        className=\"form-select\"\n                        name=\"betName\"\n                        value={newBet.betName}\n                        onChange={handleInputChange}\n                    >\n                        <option value=\"\">Select Bet Type</option>\n                        {betNames.map(name => (\n                            <option key={name} value={name}>{name}</option>\n                        ))}\n                    </select>\n                    <button\n                        className=\"add-button\"\n                        onClick={() => setIsBetNameModalOpen(true)}\n                    >\n                        +\n                    </button>\n                </div>\n\n                {/* Date and Time Inputs */}\n                <input\n                    className=\"form-input\"\n                    type=\"date\"\n                    name=\"date\"\n                    value={newBet.date}\n                    onChange={handleInputChange}\n                />\n                <input\n                    className=\"form-input\"\n                    type=\"time\"\n                    name=\"hour\"\n                    value={newBet.hour}\n                    onChange={handleInputChange}\n                />\n            </div>\n\n            <button className=\"submit-button\" onClick={handleAddBet}>\n                Add Bet\n            </button>\n\n            {/* Bets Table */}\n            <div className=\"table-container\">\n                <table className=\"data-table\">\n                    <thead className=\"table-header\">\n                    <tr>\n                        <th>ID</th>\n                        <th>Team A</th>\n                        <th>Team B</th>\n                        <th>Bet Type</th>\n                        <th>How Wins</th>\n                        <th>Date & Time</th>\n                        <th>Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {bets.map(bet => (\n                        <tr key={bet.id} className=\"table-row\">\n                            <td className=\"table-cell\">{bet.id}</td>\n                            <td className=\"table-cell\">{bet.teamA}</td>\n                            <td className=\"table-cell\">{bet.teamB}</td>\n                            <td className=\"table-cell\">{bet.betName}</td>\n                            <td className=\"table-cell\">{bet.howWins}</td>\n                            <td className=\"table-cell\">{bet.dateTime}</td>\n                            <td className=\"table-cell\">\n                                <button\n                                    className=\"action-button win-button\"\n                                    onClick={() => handleManualWin(bet.id, 1)}\n                                >\n                                    Team A Win\n                                </button>\n                                <button\n                                    className=\"action-button win-button\"\n                                    onClick={() => handleManualWin(bet.id, 2)}\n                                >\n                                    Team B Win\n                                </button>\n                                <button\n                                    className=\"action-button remove-button\"\n                                    onClick={() => handleRemoveBet(bet.id)}\n                                >\n                                    Remove\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n\n            {/* Add Team Modal */}\n            <Modal isOpen={isTeamModalOpen} onClose={() => setIsTeamModalOpen(false)}>\n                <form onSubmit={handleAddTeam} className=\"modal-form\">\n                    <div>\n                        <label htmlFor=\"teamName\">Team Name</label>\n                        <input\n                            type=\"text\"\n                            id=\"teamName\"\n                            name=\"name\"\n                            value={newTeam.name}\n                            onChange={handleNewTeamChange}\n                            className=\"modal-input\"\n                            required\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"teamImage\">Team Image</label>\n                        <input\n                            type=\"file\"\n                            id=\"teamImage\"\n                            name=\"image\"\n                            onChange={handleNewTeamChange}\n                            className=\"file-input\"\n                            accept=\"image/*\"\n                            required\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"submit-button\">\n                        Add Team\n                    </button>\n                </form>\n            </Modal>\n\n            {/* Add Bet Name Modal */}\n            <Modal isOpen={isBetNameModalOpen} onClose={() => setIsBetNameModalOpen(false)}>\n                <form onSubmit={handleAddBetName} className=\"modal-form\">\n                    <div>\n                        <label htmlFor=\"betName\">New Bet Type</label>\n                        <input\n                            type=\"text\"\n                            id=\"betName\"\n                            value={newBetName}\n                            onChange={(e) => setNewBetName(e.target.value)}\n                            className=\"modal-input\"\n                            required\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"submit-button\">\n                        Add Bet Type\n                    </button>\n                </form>\n            </Modal>\n        </div>\n    );\n};\n\nexport default ManagerBetControl;","import { Navigate, Outlet } from \"react-router-dom\";\nimport React from 'react';\n\nconst Protected = () => {\n    const token = localStorage.getItem(\"accessToken\");\n    return token ? <Outlet /> : <Navigate to=\"/login\" />;\n};\n\nexport default Protected;","import { Navigate, Outlet } from \"react-router-dom\";\nimport React, {useEffect, useState} from 'react';\nimport {axiosInstance} from \"../store/request\";\n\nconst hasPermission = async () => {\n    let hasPermit;\n     try {\n            const manager = await axiosInstance.get('/auth/v1/getPermission?role=manager');\n            hasPermit = manager.data;\n            } catch (e) {\n            hasPermit = false\n            }\n    return hasPermit;\n}\nconst ManagerRoutes = () => {\n\n    const manager =  hasPermission();\n    return manager ? <Outlet /> : <Navigate to=\"/\" />;\n};\n\nexport default ManagerRoutes;\n\n","import React from \"react\";\nimport {\n    Navigate\n} from \"react-router-dom\";\nconst LoginChecker = ({ children }) => {\n    if (isAuth()) {\n        return <Navigate to=\"/\" replace />;\n    }\n    return children;\n};\n\nconst isAuth = () => localStorage.getItem('accessToken');\n\nconst checkLogin = () => {\n    if (isAuth()) {\n        window.location.href = '/';  // Force refresh to update auth state\n    }\n};\n\nexport {LoginChecker, checkLogin}","import React, {useEffect, useState} from 'react';\nimport './league-table.css';\nimport BottomMenu from \"./BottomMenu\";\nimport {axiosInstance} from \"../store/request\";\n\nconst LeagueTable = () => {\n    const [sortedPlayers, setSortedPlayers] = useState([]);\n    const [leagueName, setLeagueName] = useState(\"\");\n\n    useEffect(() => {\n        fetchLeague();\n    }, []);\n\n    async function fetchLeague(){\n        const league = await axiosInstance.get('leagues/v1/getUserLeague')\n        setLeagueName(league.data.name);\n        setSortedPlayers([...league.data.players].sort((a, b) => b.points - a.points))\n    }\n\n    return (\n        <div className=\"league-table-container\">\n            <div className=\"league-header\">\n                <h2 className=\"league-title\">{leagueName}</h2>\n            </div>\n\n            <div className=\"table-container\">\n                <table className=\"rankings-table\">\n                    <thead>\n                    <tr>\n                        <th>מיקום</th>\n                        <th>כינוי</th>\n                        <th>נקודות</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {sortedPlayers.map((player, index) => (\n                        <tr key={player.nickname}>\n                            <td className=\"position-cell\">#{index + 1}</td>\n                            <td className=\"nickname-cell\">{player.nickname}</td>\n                            <td className=\"points-cell\">{player.points}</td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n            <BottomMenu/>\n        </div>\n    );\n};\n\nexport default LeagueTable;","import React, {useEffect, useState} from 'react';\nimport './profile.css';\nimport BottomMenu from \"./BottomMenu\";\nimport {axiosInstance} from \"../store/request\";\nimport {userLigaApi} from \"../store/apis\";\n\nconst UserProfile = () => {\n    const [userData, setUserData] = useState({});\n    const [betHistory, setBetHistory] = useState([]);\n    useEffect(() => {\n        fetchUser();\n    }, []);\n\n    async function fetchUser(){\n        const [userResponse] = await Promise.all([\n            userLigaApi()\n        ]);\n        setUserData(userResponse)\n    }\n\n\n    return (\n        <div className=\"profile-container\">\n            <div className=\"profile-card\">\n                <div className=\"profile-header\">\n                    <div className=\"profile-main-info\">\n                        <div>\n                            <div className=\"profile-name-section\">\n                                    <>\n                                        <h2 className=\"profile-nickname\">{userData.nickname}</h2>\n                                    </>\n                            </div>\n                            <div className=\"league-selection\">\n                                <span>נקודות: {userData.points}</span>\n                            </div>\n                        </div>\n                        <div className=\"stats-section\">\n                            <div className=\"stat-item\">אחוז הצלחה: {userData?.winRate}%</div>\n                            <div className=\"stat-item\">הימורים: {userData?.totalBets}</div>\n                        </div>\n                    </div>\n                </div>\n\n                {/*<div className=\"personal-info\">*/}\n                {/*    <h3 className=\"section-title\">פרטים אישיים</h3>*/}\n                {/*    <div className=\"info-grid\">*/}\n                {/*        <div className=\"info-item\">*/}\n                {/*            <span className=\"info-label\">אימייל</span>*/}\n                {/*            <span className=\"info-value\">{userData.email}</span>*/}\n                {/*        </div>*/}\n                {/*        <div className=\"info-item\">*/}\n                {/*            <span className=\"info-label\">תאריך הצטרפות</span>*/}\n                {/*            <span className=\"info-value\">{userData.joinDate}</span>*/}\n                {/*        </div>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n\n                <div className=\"bet-history\">\n                    <h3 className=\"section-title\">היסטוריית הימורים</h3>\n                    <table className=\"history-table\">\n                        <thead>\n                        <tr>\n                            <th>תאריך</th>\n                            <th>משחק</th>\n                            <th>הימור</th>\n                            <th>תוצאה</th>\n                            <th>נקודות</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {userData?.betHistory && userData.betHistory.map((bet, index) => (\n                            <tr key={index}>\n                                <td className='plain-text'>{bet.date}</td>\n                                <td className='plain-text'>{bet.game}</td>\n                                <td className='plain-text'>{bet.bet}</td>\n                                <td className={bet.result === bet.bet ? 'result-win' : 'result-loss'}>\n                                    {bet.result}\n                                </td>\n                                <td className={bet.points.startsWith('+') ? 'points-positive' : 'points-negative'}>\n                                    {bet.points}\n                                </td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <BottomMenu/>\n        </div>\n    );\n};\n\nexport default UserProfile;","import React, {useEffect, useState} from 'react';\nimport './rules.css';\nimport BottomMenu from \"./BottomMenu\";\nimport {axiosInstance} from \"../store/request\";\n\nconst RulesComponent = () => {\n    const [expandedSection, setExpandedSection] = useState(null);\n    const [rulesData, setRulesData] = useState([]);\n\n    useEffect(() => {\n        fetchRules();\n    }, []);\n\n    const fetchRules = async ()  => {\n        const rules = await axiosInstance.get('/gameRules/v1/getRules')\n        setRulesData(rules.data)\n    }\n\n    const toggleSection = (id) => {\n        setExpandedSection(expandedSection === id ? null : id);\n    };\n\n\n    return (\n        <div className=\"rules-container\">\n            {/* Header */}\n            <div className=\"rules-header\">\n                <h1>חוקי המשחק</h1>\n                <p>כל מה שצריך לדעת כדי להתחיל לשחק</p>\n            </div>\n\n            {/* Rules Content */}\n            <div className=\"rules-content\">\n                {rulesData.map((section) => (\n                    <div key={section.id} className=\"rules-section\">\n                        <button\n                            className=\"section-button\"\n                            onClick={() => toggleSection(section.id)}\n                        >\n                            <div className=\"section-header\">\n                                <span className=\"section-icon\">{section.icon}</span>\n                                <h2 className=\"section-title\">{section.title}</h2>\n                            </div>\n                            <span className={`arrow-icon ${expandedSection === section.id ? 'expanded' : ''}`}>\n                ▼\n              </span>\n                        </button>\n\n                        <div className={`section-content ${expandedSection === section.id ? 'expanded' : ''}`}>\n                            <div className=\"section-content-inner\">\n                                <ul className=\"rules-list\">\n                                    {section.rules.map((rule, index) => (\n                                        <li key={index}>{rule}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            {/* Quick Navigation */}\n            <div className=\"quick-nav\">\n                <h3>ניווט מהיר</h3>\n                <div className=\"quick-nav-buttons\">\n                    {rulesData.map((section) => (\n                        <button\n                            key={section.id}\n                            onClick={() => toggleSection(section.id)}\n                            className={`quick-nav-button ${\n                                expandedSection === section.id ? 'active' : ''\n                            }`}\n                        >\n                            {section.icon} {section.title}\n                        </button>\n                    ))}\n                </div>\n            </div>\n            <BottomMenu/>\n        </div>\n    );\n};\n\nexport default RulesComponent;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport './AuthForm.css';\nimport https from \"https\";\nconst httpsAuth = new https.Agent({\n    rejectUnauthorized: false\n});\nconst SignupForm = ({ loginCheck }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n        confirmPassword: '',\n        firstName: '',\n        lastName: ''\n    });\n    const [alert, setAlert] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    };\n\n    const validateForm = () => {\n        if (!formData.email || !formData.password || !formData.confirmPassword || !formData.firstName || !formData.lastName) {\n            setAlert('אנא מלא את כל השדות');\n            return false;\n        }\n        if (formData.password !== formData.confirmPassword) {\n            setAlert('הסיסמאות אינן תואמות');\n            return false;\n        }\n        if (formData.password.length < 6) {\n            setAlert('הסיסמה חייבת להכיל לפחות 6 תווים');\n            return false;\n        }\n        return true;\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!validateForm()) return;\n\n        setIsLoading(true);\n        setAlert('');\n\n        try {\n            const response = await axios.post('auth/v1/signup', {\n                email: formData.email,\n                password: formData.password,\n                firstName: formData.firstName,\n                lastName: formData.lastName\n            },{httpsAgent: httpsAuth});\n\n            if (response.status === 201) {\n                // Auto-login after successful signup\n                const loginResponse = await axios.post('auth/v1/signIn', {\n                    username: formData.email,\n                    password: formData.password\n                }, {httpsAgent: httpsAuth});\n\n                localStorage.setItem('accessToken', loginResponse.data.accessToken);\n                localStorage.setItem('refreshToken', loginResponse.data.refreshToken);\n                loginCheck();\n            } else {\n                setAlert(response.data);\n            }\n        } catch (error) {\n            if (error.response?.status === 409) {\n                setAlert('כתובת האימייל כבר קיימת במערכת');\n            } else {\n                setAlert('התרחשה שגיאה בהרשמה. אנא נסה שוב.');\n                console.error('Signup error:', error);\n            }\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"auth-container\">\n            <div className=\"auth-form-wrapper\">\n                <h2 className=\"auth-title\">הרשמה</h2>\n                <form onSubmit={handleSubmit} className=\"auth-form\">\n                    <div className=\"input-group\">\n                        <input\n                            type=\"text\"\n                            name=\"firstName\"\n                            placeholder=\"שם פרטי\"\n                            value={formData.firstName}\n                            onChange={handleChange}\n                            required\n                            className=\"auth-input\"\n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"text\"\n                            name=\"lastName\"\n                            placeholder=\"שם משפחה\"\n                            value={formData.lastName}\n                            onChange={handleChange}\n                            required\n                            className=\"auth-input\"\n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"אימייל\"\n                            value={formData.email}\n                            onChange={handleChange}\n                            required\n                            className=\"auth-input\"\n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"סיסמה\"\n                            value={formData.password}\n                            onChange={handleChange}\n                            required\n                            className=\"auth-input\"\n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"password\"\n                            name=\"confirmPassword\"\n                            placeholder=\"אימות סיסמה\"\n                            value={formData.confirmPassword}\n                            onChange={handleChange}\n                            required\n                            className=\"auth-input\"\n                        />\n                    </div>\n                    <button\n                        type=\"submit\"\n                        className={`auth-submit ${isLoading ? 'loading' : ''}`}\n                        disabled={isLoading}\n                    >\n                        {isLoading ? 'מבצע הרשמה...' : 'הירשם'}\n                    </button>\n\n                    {alert && (\n                        <div className=\"auth-alert\">\n                            {alert}\n                        </div>\n                    )}\n                </form>\n\n                <div className=\"auth-footer\">\n                    <p>\n                        כבר יש לך חשבון?{' '}\n                        <a href=\"/login\" className=\"auth-link\">התחבר כאן</a>\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SignupForm;","import {\n    Route,\n    BrowserRouter,\n    Routes\n} from \"react-router-dom\";\nimport AuthForm from '../components/AuthForm';\nimport Protected from \"./PrivateRoutes\";\nimport ManagerRoutes from './managerRoutes'\nimport ManagerBetControl from \"../components/ManagerBetControl\";\nimport EventListing from \"../components/EventListing\";\nimport React from 'react';\nimport {LoginChecker, checkLogin} from \"./helpers\";\nimport LeagueTable from \"../components/LeagueTable\";\nimport UserProfile from \"../components/UserProfile\";\nimport RulesComponent from \"../components/RulesComponent\";\nimport SignupForm from \"../components/SignupForm\";\n\nconst Router = () => {\n    return(\n        <BrowserRouter>\n            <Routes>\n            <Route path=\"/\">\n                <Route element={<Protected />}>\n                    <Route element={<ManagerRoutes/>}>\n                    <Route path=\"manager\" element={<ManagerBetControl />} />\n                </Route>\n                <Route index element={<EventListing />} />\n                    <Route path=\"league\" element={<LeagueTable />} />\n                    <Route path=\"rules\" element={<RulesComponent />} />\n                    <Route path=\"profile\" element={<UserProfile />} />\n                </Route>\n                <Route path=\"login\"  element={\n                    <LoginChecker>\n                        <AuthForm loginCheck={checkLogin} />\n                    </LoginChecker>\n                } />\n                <Route path=\"Signup\"  element={\n                    <LoginChecker>\n                        <SignupForm loginCheck={checkLogin} />\n                    </LoginChecker>\n                } />\n            </Route>\n            </Routes>\n        </BrowserRouter>\n    );\n};\n\nexport default Router;","import React, { useState } from 'react';\nimport AuthForm from './components/AuthForm';\nimport EventListing from './components/EventListing';\nimport './App.css';\nimport ManagerBetControl from \"./components/ManagerBetControl\";\nimport { BrowserRouter, Route, Navigate, Routes } from \"react-router-dom\";\nimport Router from \"./routes/Router\";\n\n\n\nconst App = () => {\n  return (\n      <div className = \"container\">\n        <Router />\n      </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}